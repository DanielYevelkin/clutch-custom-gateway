{"ast":null,"code":"import _defineProperty from \"/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"checked\", \"disabled\", \"size\"];\nimport * as React from \"react\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport { Checkbox as MuiCheckbox, FormControl as MuiFormControl, FormControlLabel, FormGroup, FormLabel, Grid } from \"@mui/material\";\nimport styled from \"../styled\";\nvar FormControl = styled(MuiFormControl)({\n  width: \"75%\"\n});\nvar StyledCheckbox = styled(MuiCheckbox)({\n  color: \"#6e7083\",\n  borderRadius: \"50%\",\n  \"&:hover\": {\n    background: \"#f5f6fd\"\n  },\n  \"&:active\": {\n    background: \"#d7daf6\"\n  },\n  \"&.Mui-checked\": {\n    color: \"#ffffff\",\n    \"&:hover\": {\n      background: \"#f5f6fd\"\n    },\n    \"&:active\": {\n      background: \"#d7daf6\"\n    },\n    \"&.Mui-disabled\": {\n      color: \"#e7e7ea\",\n      \".MuiIconButton-label\": {\n        color: \"rgba(13, 16, 48, 0.38)\"\n      }\n    }\n  }\n});\nvar Icon = styled(\"div\")({\n  borderRadius: \"2px\",\n  boxSizing: \"border-box\"\n}, function (props) {\n  return {\n    height: props.$size,\n    width: props.$size,\n    border: props.$disabled ? \"1px solid #e7e7ea\" : \"1px solid #6e7083\"\n  };\n});\nvar SelectedIcon = styled(\"div\")({\n  borderRadius: \"2px\",\n  boxSizing: \"border-box\",\n  \".MuiSvgIcon-root\": {\n    display: \"block\"\n  }\n}, function (props) {\n  return {\n    height: props.$size,\n    width: props.$size,\n    background: props.$disabled ? \"#e7e7eA\" : \"#3548d4\",\n    \".MuiSvgIcon-root\": {\n      height: props.$size,\n      width: props.$size\n    }\n  };\n});\n// TODO (sperry): add 16px size variant\nvar Checkbox = function Checkbox(_ref) {\n  var checked = _ref.checked,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    size = _ref.size,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var sizePx;\n  switch (size) {\n    case \"small\":\n      sizePx = \"20px\";\n      break;\n    default:\n      sizePx = \"24px\";\n  }\n  return React.createElement(StyledCheckbox, Object.assign({\n    checked: checked,\n    size: size,\n    icon: React.createElement(Icon, {\n      \"$disabled\": disabled,\n      \"$size\": sizePx\n    }),\n    checkedIcon: React.createElement(SelectedIcon, {\n      \"$disabled\": disabled,\n      \"$size\": sizePx\n    }, React.createElement(CheckIcon, null))\n  }, props, {\n    disabled: disabled\n  }));\n};\nvar CheckboxPanel = function CheckboxPanel(_ref2) {\n  var header = _ref2.header,\n    options = _ref2.options,\n    onChange = _ref2.onChange;\n  var allOptions = {};\n  Object.keys(options).forEach(function (option) {\n    allOptions[option] = {\n      checked: options[option],\n      value: option\n    };\n  });\n  var _React$useState = React.useState(allOptions),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    selected = _React$useState2[0],\n    setSelected = _React$useState2[1];\n  var onToggle = function onToggle(e) {\n    var targetName = e.target.name;\n    var targetValue = e.target.checked;\n    var selectedOption = _objectSpread(_objectSpread({}, selected[targetName]), {}, {\n      checked: targetValue\n    });\n    var updatedSelections = _objectSpread(_objectSpread({}, selected), {}, _defineProperty({}, targetName, selectedOption));\n    setSelected(updatedSelections);\n    var callbackOptions = {};\n    Object.keys(allOptions).forEach(function (option) {\n      callbackOptions[option] = option === targetName ? targetValue : selected[option] ? selected[option].checked : allOptions[option].checked;\n    });\n    onChange(callbackOptions);\n  };\n  var optionKeys = Object.keys(allOptions);\n  var column1Keys = [].concat(optionKeys).splice(0, Math.ceil(optionKeys.length / 2));\n  var column2Keys = [].concat(optionKeys).splice(column1Keys.length, optionKeys.length);\n  return React.createElement(FormControl, null, React.createElement(Grid, {\n    container: true,\n    direction: \"column\"\n  }, React.createElement(FormLabel, {\n    color: \"secondary\",\n    focused: true\n  }, header), React.createElement(Grid, {\n    container: true,\n    direction: \"row\"\n  }, React.createElement(FormGroup, null, column1Keys.map(function (option) {\n    return React.createElement(FormGroup, {\n      row: true,\n      key: option\n    }, React.createElement(FormControlLabel, {\n      key: option,\n      control: React.createElement(Checkbox, {\n        checked: selected[option].checked,\n        onChange: onToggle,\n        name: option\n      }),\n      label: option\n    }));\n  })), React.createElement(FormGroup, null, column2Keys.map(function (option) {\n    return React.createElement(FormGroup, {\n      row: true,\n      key: option\n    }, React.createElement(FormControlLabel, {\n      key: option,\n      control: React.createElement(Checkbox, {\n        checked: selected[option].checked,\n        onChange: onToggle,\n        name: option\n      }),\n      label: option\n    }));\n  })))));\n};\nexport { CheckboxPanel, Checkbox };","map":{"version":3,"names":["React","CheckIcon","Checkbox","MuiCheckbox","FormControl","MuiFormControl","FormControlLabel","FormGroup","FormLabel","Grid","styled","width","StyledCheckbox","color","borderRadius","background","Icon","boxSizing","props","height","$size","border","$disabled","SelectedIcon","display","_ref","checked","_ref$disabled","disabled","size","_objectWithoutProperties","_excluded","sizePx","createElement","Object","assign","icon","checkedIcon","CheckboxPanel","_ref2","header","options","onChange","allOptions","keys","forEach","option","value","_React$useState","useState","_React$useState2","_slicedToArray","selected","setSelected","onToggle","e","targetName","target","name","targetValue","selectedOption","_objectSpread","updatedSelections","_defineProperty","callbackOptions","optionKeys","column1Keys","concat","splice","Math","ceil","length","column2Keys","container","direction","focused","map","row","key","control","label"],"sources":["/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@clutch-sh/core/dist/Input/checkbox.js"],"sourcesContent":["import * as React from \"react\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport { Checkbox as MuiCheckbox, FormControl as MuiFormControl, FormControlLabel, FormGroup, FormLabel, Grid, } from \"@mui/material\";\nimport styled from \"../styled\";\nconst FormControl = styled(MuiFormControl)({\n    width: \"75%\",\n});\nconst StyledCheckbox = styled(MuiCheckbox)({\n    color: \"#6e7083\",\n    borderRadius: \"50%\",\n    \"&:hover\": {\n        background: \"#f5f6fd\",\n    },\n    \"&:active\": {\n        background: \"#d7daf6\",\n    },\n    \"&.Mui-checked\": {\n        color: \"#ffffff\",\n        \"&:hover\": {\n            background: \"#f5f6fd\",\n        },\n        \"&:active\": {\n            background: \"#d7daf6\",\n        },\n        \"&.Mui-disabled\": {\n            color: \"#e7e7ea\",\n            \".MuiIconButton-label\": {\n                color: \"rgba(13, 16, 48, 0.38)\",\n            },\n        },\n    },\n});\nconst Icon = styled(\"div\")({\n    borderRadius: \"2px\",\n    boxSizing: \"border-box\",\n}, props => ({\n    height: props.$size,\n    width: props.$size,\n    border: props.$disabled ? \"1px solid #e7e7ea\" : \"1px solid #6e7083\",\n}));\nconst SelectedIcon = styled(\"div\")({\n    borderRadius: \"2px\",\n    boxSizing: \"border-box\",\n    \".MuiSvgIcon-root\": {\n        display: \"block\",\n    },\n}, props => ({\n    height: props.$size,\n    width: props.$size,\n    background: props.$disabled ? \"#e7e7eA\" : \"#3548d4\",\n    \".MuiSvgIcon-root\": {\n        height: props.$size,\n        width: props.$size,\n    },\n}));\n// TODO (sperry): add 16px size variant\nconst Checkbox = ({ checked, disabled = false, size, ...props }) => {\n    let sizePx;\n    switch (size) {\n        case \"small\":\n            sizePx = \"20px\";\n            break;\n        default:\n            sizePx = \"24px\";\n    }\n    return (React.createElement(StyledCheckbox, Object.assign({ checked: checked, size: size, icon: React.createElement(Icon, { \"$disabled\": disabled, \"$size\": sizePx }), checkedIcon: React.createElement(SelectedIcon, { \"$disabled\": disabled, \"$size\": sizePx },\n            React.createElement(CheckIcon, null)) }, props, { disabled: disabled })));\n};\nconst CheckboxPanel = ({ header, options, onChange }) => {\n    const allOptions = {};\n    Object.keys(options).forEach(option => {\n        allOptions[option] = { checked: options[option], value: option };\n    });\n    const [selected, setSelected] = React.useState(allOptions);\n    const onToggle = e => {\n        const targetName = e.target.name;\n        const targetValue = e.target.checked;\n        const selectedOption = { ...selected[targetName], checked: targetValue };\n        const updatedSelections = { ...selected, [targetName]: selectedOption };\n        setSelected(updatedSelections);\n        const callbackOptions = {};\n        Object.keys(allOptions).forEach(option => {\n            callbackOptions[option] =\n                option === targetName\n                    ? targetValue\n                    : selected[option]\n                        ? selected[option].checked\n                        : allOptions[option].checked;\n        });\n        onChange(callbackOptions);\n    };\n    const optionKeys = Object.keys(allOptions);\n    const column1Keys = [...optionKeys].splice(0, Math.ceil(optionKeys.length / 2));\n    const column2Keys = [...optionKeys].splice(column1Keys.length, optionKeys.length);\n    return (React.createElement(FormControl, null,\n        React.createElement(Grid, { container: true, direction: \"column\" },\n            React.createElement(FormLabel, { color: \"secondary\", focused: true }, header),\n            React.createElement(Grid, { container: true, direction: \"row\" },\n                React.createElement(FormGroup, null, column1Keys.map(option => (React.createElement(FormGroup, { row: true, key: option },\n                    React.createElement(FormControlLabel, { key: option, control: React.createElement(Checkbox, { checked: selected[option].checked, onChange: onToggle, name: option }), label: option }))))),\n                React.createElement(FormGroup, null, column2Keys.map(option => (React.createElement(FormGroup, { row: true, key: option },\n                    React.createElement(FormControlLabel, { key: option, control: React.createElement(Checkbox, { checked: selected[option].checked, onChange: onToggle, name: option }), label: option })))))))));\n};\nexport { CheckboxPanel, Checkbox };\n"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,2BAA2B;AACjD,SAASC,QAAQ,IAAIC,WAAW,EAAEC,WAAW,IAAIC,cAAc,EAAEC,gBAAgB,EAAEC,SAAS,EAAEC,SAAS,EAAEC,IAAI,QAAS,eAAe;AACrI,OAAOC,MAAM,MAAM,WAAW;AAC9B,IAAMN,WAAW,GAAGM,MAAM,CAACL,cAAc,CAAC,CAAC;EACvCM,KAAK,EAAE;AACX,CAAC,CAAC;AACF,IAAMC,cAAc,GAAGF,MAAM,CAACP,WAAW,CAAC,CAAC;EACvCU,KAAK,EAAE,SAAS;EAChBC,YAAY,EAAE,KAAK;EACnB,SAAS,EAAE;IACPC,UAAU,EAAE;EAChB,CAAC;EACD,UAAU,EAAE;IACRA,UAAU,EAAE;EAChB,CAAC;EACD,eAAe,EAAE;IACbF,KAAK,EAAE,SAAS;IAChB,SAAS,EAAE;MACPE,UAAU,EAAE;IAChB,CAAC;IACD,UAAU,EAAE;MACRA,UAAU,EAAE;IAChB,CAAC;IACD,gBAAgB,EAAE;MACdF,KAAK,EAAE,SAAS;MAChB,sBAAsB,EAAE;QACpBA,KAAK,EAAE;MACX;IACJ;EACJ;AACJ,CAAC,CAAC;AACF,IAAMG,IAAI,GAAGN,MAAM,CAAC,KAAK,CAAC,CAAC;EACvBI,YAAY,EAAE,KAAK;EACnBG,SAAS,EAAE;AACf,CAAC,EAAE,UAAAC,KAAK;EAAA,OAAK;IACTC,MAAM,EAAED,KAAK,CAACE,KAAK;IACnBT,KAAK,EAAEO,KAAK,CAACE,KAAK;IAClBC,MAAM,EAAEH,KAAK,CAACI,SAAS,GAAG,mBAAmB,GAAG;EACpD,CAAC;AAAA,CAAC,CAAC;AACH,IAAMC,YAAY,GAAGb,MAAM,CAAC,KAAK,CAAC,CAAC;EAC/BI,YAAY,EAAE,KAAK;EACnBG,SAAS,EAAE,YAAY;EACvB,kBAAkB,EAAE;IAChBO,OAAO,EAAE;EACb;AACJ,CAAC,EAAE,UAAAN,KAAK;EAAA,OAAK;IACTC,MAAM,EAAED,KAAK,CAACE,KAAK;IACnBT,KAAK,EAAEO,KAAK,CAACE,KAAK;IAClBL,UAAU,EAAEG,KAAK,CAACI,SAAS,GAAG,SAAS,GAAG,SAAS;IACnD,kBAAkB,EAAE;MAChBH,MAAM,EAAED,KAAK,CAACE,KAAK;MACnBT,KAAK,EAAEO,KAAK,CAACE;IACjB;EACJ,CAAC;AAAA,CAAC,CAAC;AACH;AACA,IAAMlB,QAAQ,GAAG,SAAXA,QAAQA,CAAAuB,IAAA,EAAsD;EAAA,IAAhDC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAAC,aAAA,GAAAF,IAAA,CAAEG,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;IAAEE,IAAI,GAAAJ,IAAA,CAAJI,IAAI;IAAKX,KAAK,GAAAY,wBAAA,CAAAL,IAAA,EAAAM,SAAA;EACzD,IAAIC,MAAM;EACV,QAAQH,IAAI;IACR,KAAK,OAAO;MACRG,MAAM,GAAG,MAAM;MACf;IACJ;MACIA,MAAM,GAAG,MAAM;EACvB;EACA,OAAQhC,KAAK,CAACiC,aAAa,CAACrB,cAAc,EAAEsB,MAAM,CAACC,MAAM,CAAC;IAAET,OAAO,EAAEA,OAAO;IAAEG,IAAI,EAAEA,IAAI;IAAEO,IAAI,EAAEpC,KAAK,CAACiC,aAAa,CAACjB,IAAI,EAAE;MAAE,WAAW,EAAEY,QAAQ;MAAE,OAAO,EAAEI;IAAO,CAAC,CAAC;IAAEK,WAAW,EAAErC,KAAK,CAACiC,aAAa,CAACV,YAAY,EAAE;MAAE,WAAW,EAAEK,QAAQ;MAAE,OAAO,EAAEI;IAAO,CAAC,EACxPhC,KAAK,CAACiC,aAAa,CAAChC,SAAS,EAAE,IAAI,CAAC;EAAE,CAAC,EAAEiB,KAAK,EAAE;IAAEU,QAAQ,EAAEA;EAAS,CAAC,CAAC,CAAC;AACpF,CAAC;AACD,IAAMU,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,KAAA,EAAsC;EAAA,IAAhCC,MAAM,GAAAD,KAAA,CAANC,MAAM;IAAEC,OAAO,GAAAF,KAAA,CAAPE,OAAO;IAAEC,QAAQ,GAAAH,KAAA,CAARG,QAAQ;EAC9C,IAAMC,UAAU,GAAG,CAAC,CAAC;EACrBT,MAAM,CAACU,IAAI,CAACH,OAAO,CAAC,CAACI,OAAO,CAAC,UAAAC,MAAM,EAAI;IACnCH,UAAU,CAACG,MAAM,CAAC,GAAG;MAAEpB,OAAO,EAAEe,OAAO,CAACK,MAAM,CAAC;MAAEC,KAAK,EAAED;IAAO,CAAC;EACpE,CAAC,CAAC;EACF,IAAAE,eAAA,GAAgChD,KAAK,CAACiD,QAAQ,CAACN,UAAU,CAAC;IAAAO,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAnDI,QAAQ,GAAAF,gBAAA;IAAEG,WAAW,GAAAH,gBAAA;EAC5B,IAAMI,QAAQ,GAAG,SAAXA,QAAQA,CAAGC,CAAC,EAAI;IAClB,IAAMC,UAAU,GAAGD,CAAC,CAACE,MAAM,CAACC,IAAI;IAChC,IAAMC,WAAW,GAAGJ,CAAC,CAACE,MAAM,CAAC/B,OAAO;IACpC,IAAMkC,cAAc,GAAAC,aAAA,CAAAA,aAAA,KAAQT,QAAQ,CAACI,UAAU,CAAC;MAAE9B,OAAO,EAAEiC;IAAW,EAAE;IACxE,IAAMG,iBAAiB,GAAAD,aAAA,CAAAA,aAAA,KAAQT,QAAQ,OAAAW,eAAA,KAAGP,UAAU,EAAGI,cAAc,EAAE;IACvEP,WAAW,CAACS,iBAAiB,CAAC;IAC9B,IAAME,eAAe,GAAG,CAAC,CAAC;IAC1B9B,MAAM,CAACU,IAAI,CAACD,UAAU,CAAC,CAACE,OAAO,CAAC,UAAAC,MAAM,EAAI;MACtCkB,eAAe,CAAClB,MAAM,CAAC,GACnBA,MAAM,KAAKU,UAAU,GACfG,WAAW,GACXP,QAAQ,CAACN,MAAM,CAAC,GACZM,QAAQ,CAACN,MAAM,CAAC,CAACpB,OAAO,GACxBiB,UAAU,CAACG,MAAM,CAAC,CAACpB,OAAO;IAC5C,CAAC,CAAC;IACFgB,QAAQ,CAACsB,eAAe,CAAC;EAC7B,CAAC;EACD,IAAMC,UAAU,GAAG/B,MAAM,CAACU,IAAI,CAACD,UAAU,CAAC;EAC1C,IAAMuB,WAAW,GAAG,GAAAC,MAAA,CAAIF,UAAU,EAAEG,MAAM,CAAC,CAAC,EAAEC,IAAI,CAACC,IAAI,CAACL,UAAU,CAACM,MAAM,GAAG,CAAC,CAAC,CAAC;EAC/E,IAAMC,WAAW,GAAG,GAAAL,MAAA,CAAIF,UAAU,EAAEG,MAAM,CAACF,WAAW,CAACK,MAAM,EAAEN,UAAU,CAACM,MAAM,CAAC;EACjF,OAAQvE,KAAK,CAACiC,aAAa,CAAC7B,WAAW,EAAE,IAAI,EACzCJ,KAAK,CAACiC,aAAa,CAACxB,IAAI,EAAE;IAAEgE,SAAS,EAAE,IAAI;IAAEC,SAAS,EAAE;EAAS,CAAC,EAC9D1E,KAAK,CAACiC,aAAa,CAACzB,SAAS,EAAE;IAAEK,KAAK,EAAE,WAAW;IAAE8D,OAAO,EAAE;EAAK,CAAC,EAAEnC,MAAM,CAAC,EAC7ExC,KAAK,CAACiC,aAAa,CAACxB,IAAI,EAAE;IAAEgE,SAAS,EAAE,IAAI;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC3D1E,KAAK,CAACiC,aAAa,CAAC1B,SAAS,EAAE,IAAI,EAAE2D,WAAW,CAACU,GAAG,CAAC,UAAA9B,MAAM;IAAA,OAAK9C,KAAK,CAACiC,aAAa,CAAC1B,SAAS,EAAE;MAAEsE,GAAG,EAAE,IAAI;MAAEC,GAAG,EAAEhC;IAAO,CAAC,EACrH9C,KAAK,CAACiC,aAAa,CAAC3B,gBAAgB,EAAE;MAAEwE,GAAG,EAAEhC,MAAM;MAAEiC,OAAO,EAAE/E,KAAK,CAACiC,aAAa,CAAC/B,QAAQ,EAAE;QAAEwB,OAAO,EAAE0B,QAAQ,CAACN,MAAM,CAAC,CAACpB,OAAO;QAAEgB,QAAQ,EAAEY,QAAQ;QAAEI,IAAI,EAAEZ;MAAO,CAAC,CAAC;MAAEkC,KAAK,EAAElC;IAAO,CAAC,CAAC,CAAC;EAAA,CAAC,CAAC,CAAC,EAC9L9C,KAAK,CAACiC,aAAa,CAAC1B,SAAS,EAAE,IAAI,EAAEiE,WAAW,CAACI,GAAG,CAAC,UAAA9B,MAAM;IAAA,OAAK9C,KAAK,CAACiC,aAAa,CAAC1B,SAAS,EAAE;MAAEsE,GAAG,EAAE,IAAI;MAAEC,GAAG,EAAEhC;IAAO,CAAC,EACrH9C,KAAK,CAACiC,aAAa,CAAC3B,gBAAgB,EAAE;MAAEwE,GAAG,EAAEhC,MAAM;MAAEiC,OAAO,EAAE/E,KAAK,CAACiC,aAAa,CAAC/B,QAAQ,EAAE;QAAEwB,OAAO,EAAE0B,QAAQ,CAACN,MAAM,CAAC,CAACpB,OAAO;QAAEgB,QAAQ,EAAEY,QAAQ;QAAEI,IAAI,EAAEZ;MAAO,CAAC,CAAC;MAAEkC,KAAK,EAAElC;IAAO,CAAC,CAAC,CAAC;EAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjN,CAAC;AACD,SAASR,aAAa,EAAEpC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}