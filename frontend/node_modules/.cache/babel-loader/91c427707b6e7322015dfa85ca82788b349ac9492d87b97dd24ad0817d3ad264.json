{"ast":null,"code":"import _slicedToArray from \"/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { useShortLinkContext, WorkflowStorageContext } from \"../Contexts\";\nimport { retrieveData as retrieveDataHelper } from \"../Contexts/workflow-storage-context/helpers\";\nimport workflowStorageContextReducer from \"../Contexts/workflow-storage-context/reducer\";\nimport { defaultWorkflowStorageState } from \"../Contexts/workflow-storage-context/types\";\nimport { Alert } from \"../Feedback\";\nimport { Link } from \"../link\";\nimport styled from \"../styled\";\nimport { generateShortLinkRoute } from \"./short-link-proxy\";\n/** Allows the alert to float on top of all other components on the page */\nvar StyledAlert = styled(Alert)({\n  zIndex: 1200,\n  position: \"absolute\",\n  padding: \"6px 8px\"\n});\n/**\n * Hydrator which is a wrapper for workflows\n * Will check on load if there exists any hydrated data for the current workflow\n * If there is it will populate the state and provide an alert above the workflow\n */\nvar ShortLinkStateHydrator = function ShortLinkStateHydrator(_ref) {\n  var children = _ref.children,\n    clearTemporaryState = _ref.clearTemporaryState,\n    sharedState = _ref.sharedState;\n  var _useShortLinkContext = useShortLinkContext(),\n    storeWorkflowSession = _useShortLinkContext.storeWorkflowSession;\n  var _React$useReducer = React.useReducer(workflowStorageContextReducer, defaultWorkflowStorageState),\n    _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n    state = _React$useReducer2[0],\n    dispatch = _React$useReducer2[1];\n  React.useEffect(function () {\n    var _a;\n    if ((_a = sharedState === null || sharedState === void 0 ? void 0 : sharedState.state) === null || _a === void 0 ? void 0 : _a.length) {\n      dispatch({\n        type: \"HYDRATE\",\n        payload: {\n          data: sharedState\n        }\n      });\n      clearTemporaryState();\n    }\n  }, [sharedState]);\n  React.useEffect(function () {\n    if (state.workflowSessionStore) {\n      storeWorkflowSession(state.workflowSessionStore);\n    }\n  }, [state]);\n  function retrieveData(componentName, key, defaultData) {\n    return retrieveDataHelper(state.workflowStore, componentName, key, defaultData);\n  }\n  var storageProviderProps = React.useMemo(function () {\n    return {\n      /**\n       * Boolean representing whether the state has been hydrated\n       */\n      fromShortLink: state.fromShortLink,\n      /**\n       * StoreData context function which will allow a component to write data for use in shortlinks as well as\n       * store locally\n       * @param componentName Name of the component that data is being stored under\n       * @param key A lookup key used to reference the specific data set being stored\n       * @param data The data being stored\n       * @param localStorage Optional boolean on whether to write data to the localStorage as well\n       * @returns void\n       */\n      storeData: function storeData(componentName, key, data, localStorage) {\n        return dispatch({\n          type: \"STORE_DATA\",\n          payload: {\n            componentName: componentName,\n            key: key,\n            data: data,\n            localStorage: localStorage\n          }\n        });\n      },\n      /**\n       * RemoveData context function which will allow a component to remove data from use in shortlinks as well\n       * locally if preferred\n       * @param componentName Name of the component that data is being removed under\n       * @param key A lookup key used to reference the specific data set being removed\n       * @param localStorage Optional boolean on whether to remove data from localStorage as well\n       * @returns\n       */\n      removeData: function removeData(componentName, key, localStorage) {\n        return dispatch({\n          type: \"REMOVE_DATA\",\n          payload: {\n            componentName: componentName,\n            key: key,\n            localStorage: localStorage\n          }\n        });\n      },\n      /**\n       * RetrieveData context function which will allow a component to retrieve data from a hydrated short link and\n       * barring that will return data from local storage if available\n       * @param componentName Name of the component that data is being retrieved under\n       * @param key A lookup key used to reference the specific data set being retrieved\n       * @param defaultData Optional set of data returned if nothing is found in the hydrator or localStorage\n       * @returns\n       */\n      retrieveData: retrieveData\n    };\n  }, [state]);\n  return React.createElement(WorkflowStorageContext.Provider, {\n    value: storageProviderProps\n  }, state.fromShortLink && React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"flex-end\"\n  }, React.createElement(StyledAlert, {\n    severity: \"warning\"\n  }, React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    }\n  }, \"Loaded shared state\", state.hash && state.hash.length > 0 && React.createElement(React.Fragment, null, \"\\\"\", React.createElement(Link, {\n    href: generateShortLinkRoute(window.location.origin, state.hash)\n  }, state.hash), \"\\\"\"), \". Any local changes will not be preserved.\"))), children);\n};\nexport default ShortLinkStateHydrator;","map":{"version":3,"names":["React","Grid","useShortLinkContext","WorkflowStorageContext","retrieveData","retrieveDataHelper","workflowStorageContextReducer","defaultWorkflowStorageState","Alert","Link","styled","generateShortLinkRoute","StyledAlert","zIndex","position","padding","ShortLinkStateHydrator","_ref","children","clearTemporaryState","sharedState","_useShortLinkContext","storeWorkflowSession","_React$useReducer","useReducer","_React$useReducer2","_slicedToArray","state","dispatch","useEffect","_a","length","type","payload","data","workflowSessionStore","componentName","key","defaultData","workflowStore","storageProviderProps","useMemo","fromShortLink","storeData","localStorage","removeData","createElement","Provider","value","container","direction","alignItems","severity","style","display","hash","Fragment","href","window","location","origin"],"sources":["/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@clutch-sh/core/dist/AppProvider/short-link-state-hydrator.js"],"sourcesContent":["import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { useShortLinkContext, WorkflowStorageContext } from \"../Contexts\";\nimport { retrieveData as retrieveDataHelper } from \"../Contexts/workflow-storage-context/helpers\";\nimport workflowStorageContextReducer from \"../Contexts/workflow-storage-context/reducer\";\nimport { defaultWorkflowStorageState } from \"../Contexts/workflow-storage-context/types\";\nimport { Alert } from \"../Feedback\";\nimport { Link } from \"../link\";\nimport styled from \"../styled\";\nimport { generateShortLinkRoute } from \"./short-link-proxy\";\n/** Allows the alert to float on top of all other components on the page */\nconst StyledAlert = styled(Alert)({\n    zIndex: 1200,\n    position: \"absolute\",\n    padding: \"6px 8px\",\n});\n/**\n * Hydrator which is a wrapper for workflows\n * Will check on load if there exists any hydrated data for the current workflow\n * If there is it will populate the state and provide an alert above the workflow\n */\nconst ShortLinkStateHydrator = ({ children, clearTemporaryState, sharedState, }) => {\n    const { storeWorkflowSession } = useShortLinkContext();\n    const [state, dispatch] = React.useReducer(workflowStorageContextReducer, defaultWorkflowStorageState);\n    React.useEffect(() => {\n        var _a;\n        if ((_a = sharedState === null || sharedState === void 0 ? void 0 : sharedState.state) === null || _a === void 0 ? void 0 : _a.length) {\n            dispatch({ type: \"HYDRATE\", payload: { data: sharedState } });\n            clearTemporaryState();\n        }\n    }, [sharedState]);\n    React.useEffect(() => {\n        if (state.workflowSessionStore) {\n            storeWorkflowSession(state.workflowSessionStore);\n        }\n    }, [state]);\n    function retrieveData(componentName, key, defaultData) {\n        return retrieveDataHelper(state.workflowStore, componentName, key, defaultData);\n    }\n    const storageProviderProps = React.useMemo(() => ({\n        /**\n         * Boolean representing whether the state has been hydrated\n         */\n        fromShortLink: state.fromShortLink,\n        /**\n         * StoreData context function which will allow a component to write data for use in shortlinks as well as\n         * store locally\n         * @param componentName Name of the component that data is being stored under\n         * @param key A lookup key used to reference the specific data set being stored\n         * @param data The data being stored\n         * @param localStorage Optional boolean on whether to write data to the localStorage as well\n         * @returns void\n         */\n        storeData: (componentName, key, data, localStorage) => dispatch({ type: \"STORE_DATA\", payload: { componentName, key, data, localStorage } }),\n        /**\n         * RemoveData context function which will allow a component to remove data from use in shortlinks as well\n         * locally if preferred\n         * @param componentName Name of the component that data is being removed under\n         * @param key A lookup key used to reference the specific data set being removed\n         * @param localStorage Optional boolean on whether to remove data from localStorage as well\n         * @returns\n         */\n        removeData: (componentName, key, localStorage) => dispatch({ type: \"REMOVE_DATA\", payload: { componentName, key, localStorage } }),\n        /**\n         * RetrieveData context function which will allow a component to retrieve data from a hydrated short link and\n         * barring that will return data from local storage if available\n         * @param componentName Name of the component that data is being retrieved under\n         * @param key A lookup key used to reference the specific data set being retrieved\n         * @param defaultData Optional set of data returned if nothing is found in the hydrator or localStorage\n         * @returns\n         */\n        retrieveData,\n    }), [state]);\n    return (React.createElement(WorkflowStorageContext.Provider, { value: storageProviderProps },\n        state.fromShortLink && (React.createElement(Grid, { container: true, direction: \"column\", alignItems: \"flex-end\" },\n            React.createElement(StyledAlert, { severity: \"warning\" },\n                React.createElement(\"div\", { style: { display: \"flex\" } },\n                    \"Loaded shared state\",\n                    state.hash && state.hash.length > 0 && (React.createElement(React.Fragment, null,\n                        \"\\\"\",\n                        React.createElement(Link, { href: generateShortLinkRoute(window.location.origin, state.hash) }, state.hash),\n                        \"\\\"\")),\n                    \". Any local changes will not be preserved.\")))),\n        children));\n};\nexport default ShortLinkStateHydrator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}