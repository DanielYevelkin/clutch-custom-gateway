{"ast":null,"code":"import _objectWithoutProperties from \"/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"short\", \"onClick\", \"formatter\"];\nimport React from \"react\";\nimport ReactTimeago from \"react-timeago\";\nvar unitFormatter = function unitFormatter(unit) {\n  switch (unit) {\n    case \"month\":\n      // month -> mo\n      return unit.substring(0, 2);\n    default:\n      return unit.charAt(0);\n  }\n};\nvar parseTimestamp = function parseTimestamp(timestamp) {\n  return parseInt((timestamp === null || timestamp === void 0 ? void 0 : timestamp.toString()) || \"0\", 10);\n};\nvar setMilliseconds = function setMilliseconds(timestamp) {\n  var ts = new Date(0);\n  return ts.setUTCMilliseconds(parseTimestamp(timestamp));\n};\n/**\n * Will take a date/timestamp in and calculate the timeago for it\n * @param date Date is a date in the past or the future. This can be a Date Object, A UTC date-string or number of milliseconds since epoch time.\n * @param live (default) TimeAgo is live by default and will auto update it's value. However, if you don't want this behaviour, you can set live:false.\n * @param short (default) will shorten the unit string (day -> d)\n * @returns react component representing the timeago\n */\nvar TimeAgo = function TimeAgo(_ref) {\n  var _ref$short = _ref.short,\n    short = _ref$short === void 0 ? true : _ref$short,\n    onClick = _ref.onClick,\n    formatter = _ref.formatter,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return React.createElement(ReactTimeago, Object.assign({}, props, {\n    formatter: formatter !== null && formatter !== void 0 ? formatter : function (value, unit) {\n      return \"\".concat(setMilliseconds(value)).concat(short ? unitFormatter(unit) : value > 1 ? \" \".concat(unit, \"s\") : \" \".concat(unit));\n    },\n    onClick: onClick\n  }));\n};\nexport default TimeAgo;","map":{"version":3,"names":["React","ReactTimeago","unitFormatter","unit","substring","charAt","parseTimestamp","timestamp","parseInt","toString","setMilliseconds","ts","Date","setUTCMilliseconds","TimeAgo","_ref","_ref$short","short","onClick","formatter","props","_objectWithoutProperties","_excluded","createElement","Object","assign","value","concat"],"sources":["/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@clutch-sh/core/dist/timeago.js"],"sourcesContent":["import React from \"react\";\nimport ReactTimeago from \"react-timeago\";\nconst unitFormatter = (unit) => {\n    switch (unit) {\n        case \"month\":\n            // month -> mo\n            return unit.substring(0, 2);\n        default:\n            return unit.charAt(0);\n    }\n};\nconst parseTimestamp = (timestamp) => {\n    return parseInt((timestamp === null || timestamp === void 0 ? void 0 : timestamp.toString()) || \"0\", 10);\n};\nconst setMilliseconds = (timestamp) => {\n    const ts = new Date(0);\n    return ts.setUTCMilliseconds(parseTimestamp(timestamp));\n};\n/**\n * Will take a date/timestamp in and calculate the timeago for it\n * @param date Date is a date in the past or the future. This can be a Date Object, A UTC date-string or number of milliseconds since epoch time.\n * @param live (default) TimeAgo is live by default and will auto update it's value. However, if you don't want this behaviour, you can set live:false.\n * @param short (default) will shorten the unit string (day -> d)\n * @returns react component representing the timeago\n */\nconst TimeAgo = ({ short = true, onClick, formatter, ...props }) => (React.createElement(ReactTimeago, Object.assign({}, props, { formatter: formatter !== null && formatter !== void 0 ? formatter : ((value, unit) => `${setMilliseconds(value)}${short ? unitFormatter(unit) : value > 1 ? ` ${unit}s` : ` ${unit}`}`), onClick: onClick })));\nexport default TimeAgo;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,eAAe;AACxC,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,IAAI,EAAK;EAC5B,QAAQA,IAAI;IACR,KAAK,OAAO;MACR;MACA,OAAOA,IAAI,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/B;MACI,OAAOD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC;EAC7B;AACJ,CAAC;AACD,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,SAAS,EAAK;EAClC,OAAOC,QAAQ,CAAC,CAACD,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACE,QAAQ,CAAC,CAAC,KAAK,GAAG,EAAE,EAAE,CAAC;AAC5G,CAAC;AACD,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIH,SAAS,EAAK;EACnC,IAAMI,EAAE,GAAG,IAAIC,IAAI,CAAC,CAAC,CAAC;EACtB,OAAOD,EAAE,CAACE,kBAAkB,CAACP,cAAc,CAACC,SAAS,CAAC,CAAC;AAC3D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMO,OAAO,GAAG,SAAVA,OAAOA,CAAAC,IAAA;EAAA,IAAAC,UAAA,GAAAD,IAAA,CAAME,KAAK;IAALA,KAAK,GAAAD,UAAA,cAAG,IAAI,GAAAA,UAAA;IAAEE,OAAO,GAAAH,IAAA,CAAPG,OAAO;IAAEC,SAAS,GAAAJ,IAAA,CAATI,SAAS;IAAKC,KAAK,GAAAC,wBAAA,CAAAN,IAAA,EAAAO,SAAA;EAAA,OAAQtB,KAAK,CAACuB,aAAa,CAACtB,YAAY,EAAEuB,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEL,KAAK,EAAE;IAAED,SAAS,EAAEA,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAGA,SAAS,GAAI,UAACO,KAAK,EAAEvB,IAAI;MAAA,UAAAwB,MAAA,CAAQjB,eAAe,CAACgB,KAAK,CAAC,EAAAC,MAAA,CAAGV,KAAK,GAAGf,aAAa,CAACC,IAAI,CAAC,GAAGuB,KAAK,GAAG,CAAC,OAAAC,MAAA,CAAOxB,IAAI,aAAAwB,MAAA,CAAUxB,IAAI,CAAE;IAAA,CAAG;IAAEe,OAAO,EAAEA;EAAQ,CAAC,CAAC,CAAC;AAAA,CAAC;AAChV,eAAeJ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}