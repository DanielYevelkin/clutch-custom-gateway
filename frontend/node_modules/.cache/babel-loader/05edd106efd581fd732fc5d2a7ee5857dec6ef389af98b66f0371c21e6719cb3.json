{"ast":null,"code":"import React, { forwardRef } from \"react\";\nimport ArrowUpward from \"@mui/icons-material/ArrowUpward\";\nimport ChevronLeft from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRight from \"@mui/icons-material/ChevronRight\";\nimport Clear from \"@mui/icons-material/Clear\";\nimport FirstPage from \"@mui/icons-material/FirstPage\";\nimport LastPage from \"@mui/icons-material/LastPage\";\nimport Search from \"@mui/icons-material/Search\";\nimport MaterialTable from \"material-table\";\n// n.b. this exists to bridge incompatibilities between the\n// latest material-ui and material-table.\nvar icons = {\n  DetailPanel: forwardRef(function (props, ref) {\n    return React.createElement(ChevronRight, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  FirstPage: forwardRef(function (props, ref) {\n    return React.createElement(FirstPage, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  LastPage: forwardRef(function (props, ref) {\n    return React.createElement(LastPage, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  NextPage: forwardRef(function (props, ref) {\n    return React.createElement(ChevronRight, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  PreviousPage: forwardRef(function (props, ref) {\n    return React.createElement(ChevronLeft, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  ResetSearch: forwardRef(function (props, ref) {\n    return React.createElement(Clear, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  Search: forwardRef(function (props, ref) {\n    return React.createElement(Search, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  SortArrow: forwardRef(function (props, ref) {\n    return React.createElement(ArrowUpward, Object.assign({}, props, {\n      ref: ref\n    }));\n  })\n};\nvar flattenTreeData = function flattenTreeData(data, parentId) {\n  var nodes = [];\n  Object.keys(data).forEach(function (key) {\n    var nodeId = key;\n    if (parentId) {\n      nodeId = \"\".concat(parentId, \"-\").concat(key);\n    }\n    var value = data[key];\n    if (value instanceof Object) {\n      nodes = nodes.concat(flattenTreeData(value, nodeId));\n      value = \"\";\n    }\n    var node = {\n      id: nodeId,\n      name: key,\n      value: value,\n      parentId: \"\"\n    };\n    if (parentId) {\n      node.parentId = parentId;\n    }\n    nodes.push(node);\n  });\n  return nodes;\n};\nvar TreeTable = function TreeTable(_ref) {\n  var title = _ref.title,\n    data = _ref.data;\n  var treeData = flattenTreeData(data);\n  return React.createElement(MaterialTable, {\n    title: title || \"\",\n    icons: icons,\n    style: {\n      minWidth: \"600px\",\n      width: \"100%\"\n    },\n    options: {\n      maxBodyHeight: \"400px\"\n    },\n    data: treeData,\n    columns: [{\n      title: \"Key\",\n      field: \"name\"\n    }, {\n      title: \"Value\",\n      field: \"value\"\n    }],\n    parentChildData: function parentChildData(row, rows) {\n      return rows.find(function (a) {\n        return a.id === row.parentId;\n      });\n    }\n  });\n};\nexport default TreeTable;","map":{"version":3,"names":["React","forwardRef","ArrowUpward","ChevronLeft","ChevronRight","Clear","FirstPage","LastPage","Search","MaterialTable","icons","DetailPanel","props","ref","createElement","Object","assign","NextPage","PreviousPage","ResetSearch","SortArrow","flattenTreeData","data","parentId","nodes","keys","forEach","key","nodeId","concat","value","node","id","name","push","TreeTable","_ref","title","treeData","style","minWidth","width","options","maxBodyHeight","columns","field","parentChildData","row","rows","find","a"],"sources":["/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@clutch-sh/core/dist/Table/tree-table.js"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport ArrowUpward from \"@mui/icons-material/ArrowUpward\";\nimport ChevronLeft from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRight from \"@mui/icons-material/ChevronRight\";\nimport Clear from \"@mui/icons-material/Clear\";\nimport FirstPage from \"@mui/icons-material/FirstPage\";\nimport LastPage from \"@mui/icons-material/LastPage\";\nimport Search from \"@mui/icons-material/Search\";\nimport MaterialTable from \"material-table\";\n// n.b. this exists to bridge incompatibilities between the\n// latest material-ui and material-table.\nconst icons = {\n    DetailPanel: forwardRef((props, ref) => (React.createElement(ChevronRight, Object.assign({}, props, { ref: ref })))),\n    FirstPage: forwardRef((props, ref) => (React.createElement(FirstPage, Object.assign({}, props, { ref: ref })))),\n    LastPage: forwardRef((props, ref) => (React.createElement(LastPage, Object.assign({}, props, { ref: ref })))),\n    NextPage: forwardRef((props, ref) => (React.createElement(ChevronRight, Object.assign({}, props, { ref: ref })))),\n    PreviousPage: forwardRef((props, ref) => (React.createElement(ChevronLeft, Object.assign({}, props, { ref: ref })))),\n    ResetSearch: forwardRef((props, ref) => (React.createElement(Clear, Object.assign({}, props, { ref: ref })))),\n    Search: forwardRef((props, ref) => (React.createElement(Search, Object.assign({}, props, { ref: ref })))),\n    SortArrow: forwardRef((props, ref) => (React.createElement(ArrowUpward, Object.assign({}, props, { ref: ref })))),\n};\nconst flattenTreeData = (data, parentId) => {\n    let nodes = [];\n    Object.keys(data).forEach(key => {\n        let nodeId = key;\n        if (parentId) {\n            nodeId = `${parentId}-${key}`;\n        }\n        let value = data[key];\n        if (value instanceof Object) {\n            nodes = nodes.concat(flattenTreeData(value, nodeId));\n            value = \"\";\n        }\n        const node = { id: nodeId, name: key, value, parentId: \"\" };\n        if (parentId) {\n            node.parentId = parentId;\n        }\n        nodes.push(node);\n    });\n    return nodes;\n};\nconst TreeTable = ({ title, data }) => {\n    const treeData = flattenTreeData(data);\n    return (React.createElement(MaterialTable, { title: title || \"\", icons: icons, style: { minWidth: \"600px\", width: \"100%\" }, options: {\n            maxBodyHeight: \"400px\",\n        }, data: treeData, columns: [\n            { title: \"Key\", field: \"name\" },\n            { title: \"Value\", field: \"value\" },\n        ], parentChildData: (row, rows) => rows.find(a => a.id === row.parentId) }));\n};\nexport default TreeTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}