{"ast":null,"code":"import _regeneratorRuntime from \"/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"../navigation\";\nimport { client } from \"../Network\";\n/**\n * The base for a short link route\n */\nexport var ShortLinkBaseRoute = \"goto\";\n/**\n * Will return a ShortLink route\n * @param origin the windows origin\n * @param hash the hash to use for the short link\n * @returns string\n */\nexport var generateShortLinkRoute = function generateShortLinkRoute(origin, hash) {\n  return \"\".concat(origin, \"/\").concat(ShortLinkBaseRoute, \"/\").concat(hash);\n};\nvar fetchData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(hash, hydrate, onError) {\n    var requestData;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          requestData = {\n            hash: hash\n          };\n          return _context.abrupt(\"return\", client.post(\"/v1/shortlink/get\", requestData).then(function (response) {\n            var _response$data = response.data,\n              path = _response$data.path,\n              state = _response$data.state;\n            hydrate({\n              hash: hash,\n              state: state\n            });\n            return path;\n          }).catch(function (error) {\n            onError(error);\n            return \"/\";\n          }));\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function fetchData(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Component that will be present for a route which will look for a short link hash\n * If found\n * - It will set a loading state\n * - Then it will call down to the API with the hash and ask for any data pertaining to it\n * - If the API call is successful\n *   - It will use the given hydrate function to send the returned state off to the StorageContext\n *   - It will navigate to the route given in the returned state\n * - If the API call is not successful\n *   - It will leave a warning message in the console\n *   - Then navigate back to the home page\n * - Then it will remove the loading state\n */\nvar ShortLinkProxy = function ShortLinkProxy(_ref2) {\n  var hydrate = _ref2.hydrate,\n    onError = _ref2.onError,\n    setLoading = _ref2.setLoading;\n  var _useParams = useParams(),\n    hash = _useParams.hash;\n  var navigate = useNavigate();\n  React.useEffect(function () {\n    if (hash) {\n      setLoading(true);\n      (function () {\n        var _loadSL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          var path;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetchData(hash, hydrate, onError);\n              case 2:\n                path = _context2.sent;\n                navigate(path);\n                setLoading(false);\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2);\n        }));\n        function loadSL() {\n          return _loadSL.apply(this, arguments);\n        }\n        return loadSL;\n      })()();\n    }\n  }, [hash]);\n  // currently return null so that nothing is rendered\n  return null;\n};\nexport default ShortLinkProxy;","map":{"version":3,"names":["React","useParams","useNavigate","client","ShortLinkBaseRoute","generateShortLinkRoute","origin","hash","concat","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","hydrate","onError","requestData","wrap","_callee$","_context","prev","next","abrupt","post","then","response","_response$data","data","path","state","catch","error","stop","_x","_x2","_x3","apply","arguments","ShortLinkProxy","_ref2","setLoading","_useParams","navigate","useEffect","_loadSL","_callee2","_callee2$","_context2","sent","loadSL"],"sources":["/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@clutch-sh/core/dist/AppProvider/short-link-proxy.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"../navigation\";\nimport { client } from \"../Network\";\n/**\n * The base for a short link route\n */\nexport const ShortLinkBaseRoute = \"goto\";\n/**\n * Will return a ShortLink route\n * @param origin the windows origin\n * @param hash the hash to use for the short link\n * @returns string\n */\nexport const generateShortLinkRoute = (origin, hash) => `${origin}/${ShortLinkBaseRoute}/${hash}`;\nconst fetchData = async (hash, hydrate, onError) => {\n    const requestData = { hash };\n    return client\n        .post(\"/v1/shortlink/get\", requestData)\n        .then(response => {\n        const { path, state } = response.data;\n        hydrate({ hash, state });\n        return path;\n    })\n        .catch((error) => {\n        onError(error);\n        return \"/\";\n    });\n};\n/**\n * Component that will be present for a route which will look for a short link hash\n * If found\n * - It will set a loading state\n * - Then it will call down to the API with the hash and ask for any data pertaining to it\n * - If the API call is successful\n *   - It will use the given hydrate function to send the returned state off to the StorageContext\n *   - It will navigate to the route given in the returned state\n * - If the API call is not successful\n *   - It will leave a warning message in the console\n *   - Then navigate back to the home page\n * - Then it will remove the loading state\n */\nconst ShortLinkProxy = ({ hydrate, onError, setLoading }) => {\n    const { hash } = useParams();\n    const navigate = useNavigate();\n    React.useEffect(() => {\n        if (hash) {\n            setLoading(true);\n            (async function loadSL() {\n                const path = await fetchData(hash, hydrate, onError);\n                navigate(path);\n                setLoading(false);\n            })();\n        }\n    }, [hash]);\n    // currently return null so that nothing is rendered\n    return null;\n};\nexport default ShortLinkProxy;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}