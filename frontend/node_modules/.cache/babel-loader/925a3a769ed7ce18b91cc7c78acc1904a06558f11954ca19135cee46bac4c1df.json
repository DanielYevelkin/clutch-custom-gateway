{"ast":null,"code":"import _regeneratorRuntime from \"/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as $pbclutch from \"@clutch-sh/api\";\nimport _ from \"lodash\";\nimport { client } from \"../Network\";\nvar fetchResourceSchemas = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(type) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return client.post(\"/v1/resolver/getObjectSchemas\", {\n            type_url: \"type.googleapis.com/\".concat(type)\n          });\n        case 2:\n          response = _context.sent;\n          return _context.abrupt(\"return\", response.data.schemas.map(function (schema) {\n            return $pbclutch.clutch.resolver.v1.Schema.fromObject(schema);\n          }));\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function fetchResourceSchemas(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar resolveQuery = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(type, limit, fields) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return client.post(\"/v1/resolver/search\", {\n            want: \"type.googleapis.com/\".concat(type),\n            query: fields.query,\n            limit: limit\n          });\n        case 2:\n          response = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            results: response.data.results,\n            failures: response.data.partialFailures\n          });\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function resolveQuery(_x2, _x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar resolveFields = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(type, limit, fields) {\n    var _a, _b, response;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return client.post(\"/v1/resolver/resolve\", {\n            want: \"type.googleapis.com/\".concat(type),\n            have: fields,\n            limit: limit\n          });\n        case 2:\n          response = _context3.sent;\n          return _context3.abrupt(\"return\", {\n            results: ((_a = response.data) === null || _a === void 0 ? void 0 : _a.results) || [],\n            failures: ((_b = response.data) === null || _b === void 0 ? void 0 : _b.partialFailures) || []\n          });\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function resolveFields(_x5, _x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar resolveResource = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(type, limit, fields, onResolve, onError, apiPackage) {\n    var resolver;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          resolver = (fields === null || fields === void 0 ? void 0 : fields.query) !== undefined ? resolveQuery : resolveFields;\n          return _context4.abrupt(\"return\", resolver(type, limit, fields).then(function (_ref5) {\n            var results = _ref5.results,\n              failures = _ref5.failures;\n            // n.b. default to using the open source @clutch-sh/api package to resolve the\n            // resource against unless a custom package has been specified by the workflow.\n            var pbClutch = _.get($pbclutch, type);\n            if (apiPackage) {\n              pbClutch = _.get(apiPackage, type);\n            }\n            var resultObjects = results.map(function (result) {\n              return pbClutch.fromObject(result);\n            });\n            var partialFailures = failures.map(function (failure) {\n              return failure.message;\n            });\n            if (_.some(resultObjects) !== undefined) {\n              onResolve(resultObjects, partialFailures);\n            }\n          }).catch(function (err) {\n            return onError(err);\n          }));\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return function resolveResource(_x8, _x9, _x10, _x11, _x12, _x13) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport { fetchResourceSchemas, resolveResource };","map":{"version":3,"names":["$pbclutch","_","client","fetchResourceSchemas","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","type","response","wrap","_callee$","_context","prev","next","post","type_url","concat","sent","abrupt","data","schemas","map","schema","clutch","resolver","v1","Schema","fromObject","stop","_x","apply","arguments","resolveQuery","_ref2","_callee2","limit","fields","_callee2$","_context2","want","query","results","failures","partialFailures","_x2","_x3","_x4","resolveFields","_ref3","_callee3","_a","_b","_callee3$","_context3","have","_x5","_x6","_x7","resolveResource","_ref4","_callee4","onResolve","onError","apiPackage","_callee4$","_context4","undefined","then","_ref5","pbClutch","get","resultObjects","result","failure","message","some","catch","err","_x8","_x9","_x10","_x11","_x12","_x13"],"sources":["/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@clutch-sh/core/dist/Resolver/fetch.js"],"sourcesContent":["import * as $pbclutch from \"@clutch-sh/api\";\nimport _ from \"lodash\";\nimport { client } from \"../Network\";\nconst fetchResourceSchemas = async (type) => {\n    const response = await client.post(\"/v1/resolver/getObjectSchemas\", {\n        type_url: `type.googleapis.com/${type}`,\n    });\n    return response.data.schemas.map((schema) => $pbclutch.clutch.resolver.v1.Schema.fromObject(schema));\n};\nconst resolveQuery = async (type, limit, fields) => {\n    const response = await client.post(\"/v1/resolver/search\", {\n        want: `type.googleapis.com/${type}`,\n        query: fields.query,\n        limit,\n    });\n    return { results: response.data.results, failures: response.data.partialFailures };\n};\nconst resolveFields = async (type, limit, fields) => {\n    var _a, _b;\n    const response = await client.post(\"/v1/resolver/resolve\", {\n        want: `type.googleapis.com/${type}`,\n        have: fields,\n        limit,\n    });\n    return { results: ((_a = response.data) === null || _a === void 0 ? void 0 : _a.results) || [], failures: ((_b = response.data) === null || _b === void 0 ? void 0 : _b.partialFailures) || [] };\n};\nconst resolveResource = async (type, limit, fields, onResolve, onError, apiPackage) => {\n    const resolver = (fields === null || fields === void 0 ? void 0 : fields.query) !== undefined ? resolveQuery : resolveFields;\n    return resolver(type, limit, fields)\n        .then(({ results, failures }) => {\n        // n.b. default to using the open source @clutch-sh/api package to resolve the\n        // resource against unless a custom package has been specified by the workflow.\n        let pbClutch = _.get($pbclutch, type);\n        if (apiPackage) {\n            pbClutch = _.get(apiPackage, type);\n        }\n        const resultObjects = results.map(result => pbClutch.fromObject(result));\n        const partialFailures = failures.map(failure => failure.message);\n        if (_.some(resultObjects) !== undefined) {\n            onResolve(resultObjects, partialFailures);\n        }\n    })\n        .catch(err => onError(err));\n};\nexport { fetchResourceSchemas, resolveResource };\n"],"mappings":";;AAAA,OAAO,KAAKA,SAAS,MAAM,gBAAgB;AAC3C,OAAOC,CAAC,MAAM,QAAQ;AACtB,SAASC,MAAM,QAAQ,YAAY;AACnC,IAAMC,oBAAoB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,IAAI;IAAA,IAAAC,QAAA;IAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OACbb,MAAM,CAACc,IAAI,CAAC,+BAA+B,EAAE;YAChEC,QAAQ,yBAAAC,MAAA,CAAyBT,IAAI;UACzC,CAAC,CAAC;QAAA;UAFIC,QAAQ,GAAAG,QAAA,CAAAM,IAAA;UAAA,OAAAN,QAAA,CAAAO,MAAA,WAGPV,QAAQ,CAACW,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC,UAACC,MAAM;YAAA,OAAKxB,SAAS,CAACyB,MAAM,CAACC,QAAQ,CAACC,EAAE,CAACC,MAAM,CAACC,UAAU,CAACL,MAAM,CAAC;UAAA,EAAC;QAAA;QAAA;UAAA,OAAAX,QAAA,CAAAiB,IAAA;MAAA;IAAA,GAAAtB,OAAA;EAAA,CACvG;EAAA,gBALKL,oBAAoBA,CAAA4B,EAAA;IAAA,OAAA3B,IAAA,CAAA4B,KAAA,OAAAC,SAAA;EAAA;AAAA,GAKzB;AACD,IAAMC,YAAY;EAAA,IAAAC,KAAA,GAAA9B,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA6B,SAAO3B,IAAI,EAAE4B,KAAK,EAAEC,MAAM;IAAA,IAAA5B,QAAA;IAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAA4B,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA1B,IAAA,GAAA0B,SAAA,CAAAzB,IAAA;QAAA;UAAAyB,SAAA,CAAAzB,IAAA;UAAA,OACpBb,MAAM,CAACc,IAAI,CAAC,qBAAqB,EAAE;YACtDyB,IAAI,yBAAAvB,MAAA,CAAyBT,IAAI,CAAE;YACnCiC,KAAK,EAAEJ,MAAM,CAACI,KAAK;YACnBL,KAAK,EAALA;UACJ,CAAC,CAAC;QAAA;UAJI3B,QAAQ,GAAA8B,SAAA,CAAArB,IAAA;UAAA,OAAAqB,SAAA,CAAApB,MAAA,WAKP;YAAEuB,OAAO,EAAEjC,QAAQ,CAACW,IAAI,CAACsB,OAAO;YAAEC,QAAQ,EAAElC,QAAQ,CAACW,IAAI,CAACwB;UAAgB,CAAC;QAAA;QAAA;UAAA,OAAAL,SAAA,CAAAV,IAAA;MAAA;IAAA,GAAAM,QAAA;EAAA,CACrF;EAAA,gBAPKF,YAAYA,CAAAY,GAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAb,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAOjB;AACD,IAAMgB,aAAa;EAAA,IAAAC,KAAA,GAAA7C,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA4C,SAAO1C,IAAI,EAAE4B,KAAK,EAAEC,MAAM;IAAA,IAAAc,EAAA,EAAAC,EAAA,EAAA3C,QAAA;IAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAA2C,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAzC,IAAA,GAAAyC,SAAA,CAAAxC,IAAA;QAAA;UAAAwC,SAAA,CAAAxC,IAAA;UAAA,OAErBb,MAAM,CAACc,IAAI,CAAC,sBAAsB,EAAE;YACvDyB,IAAI,yBAAAvB,MAAA,CAAyBT,IAAI,CAAE;YACnC+C,IAAI,EAAElB,MAAM;YACZD,KAAK,EAALA;UACJ,CAAC,CAAC;QAAA;UAJI3B,QAAQ,GAAA6C,SAAA,CAAApC,IAAA;UAAA,OAAAoC,SAAA,CAAAnC,MAAA,WAKP;YAAEuB,OAAO,EAAE,CAAC,CAACS,EAAE,GAAG1C,QAAQ,CAACW,IAAI,MAAM,IAAI,IAAI+B,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACT,OAAO,KAAK,EAAE;YAAEC,QAAQ,EAAE,CAAC,CAACS,EAAE,GAAG3C,QAAQ,CAACW,IAAI,MAAM,IAAI,IAAIgC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACR,eAAe,KAAK;UAAG,CAAC;QAAA;QAAA;UAAA,OAAAU,SAAA,CAAAzB,IAAA;MAAA;IAAA,GAAAqB,QAAA;EAAA,CACnM;EAAA,gBARKF,aAAaA,CAAAQ,GAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAT,KAAA,CAAAlB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAQlB;AACD,IAAM2B,eAAe;EAAA,IAAAC,KAAA,GAAAxD,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAuD,SAAOrD,IAAI,EAAE4B,KAAK,EAAEC,MAAM,EAAEyB,SAAS,EAAEC,OAAO,EAAEC,UAAU;IAAA,IAAAvC,QAAA;IAAA,OAAApB,mBAAA,GAAAK,IAAA,UAAAuD,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAArD,IAAA,GAAAqD,SAAA,CAAApD,IAAA;QAAA;UACxEW,QAAQ,GAAG,CAACY,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACI,KAAK,MAAM0B,SAAS,GAAGlC,YAAY,GAAGe,aAAa;UAAA,OAAAkB,SAAA,CAAA/C,MAAA,WACrHM,QAAQ,CAACjB,IAAI,EAAE4B,KAAK,EAAEC,MAAM,CAAC,CAC/B+B,IAAI,CAAC,UAAAC,KAAA,EAA2B;YAAA,IAAxB3B,OAAO,GAAA2B,KAAA,CAAP3B,OAAO;cAAEC,QAAQ,GAAA0B,KAAA,CAAR1B,QAAQ;YAC1B;YACA;YACA,IAAI2B,QAAQ,GAAGtE,CAAC,CAACuE,GAAG,CAACxE,SAAS,EAAES,IAAI,CAAC;YACrC,IAAIwD,UAAU,EAAE;cACZM,QAAQ,GAAGtE,CAAC,CAACuE,GAAG,CAACP,UAAU,EAAExD,IAAI,CAAC;YACtC;YACA,IAAMgE,aAAa,GAAG9B,OAAO,CAACpB,GAAG,CAAC,UAAAmD,MAAM;cAAA,OAAIH,QAAQ,CAAC1C,UAAU,CAAC6C,MAAM,CAAC;YAAA,EAAC;YACxE,IAAM7B,eAAe,GAAGD,QAAQ,CAACrB,GAAG,CAAC,UAAAoD,OAAO;cAAA,OAAIA,OAAO,CAACC,OAAO;YAAA,EAAC;YAChE,IAAI3E,CAAC,CAAC4E,IAAI,CAACJ,aAAa,CAAC,KAAKL,SAAS,EAAE;cACrCL,SAAS,CAACU,aAAa,EAAE5B,eAAe,CAAC;YAC7C;UACJ,CAAC,CAAC,CACGiC,KAAK,CAAC,UAAAC,GAAG;YAAA,OAAIf,OAAO,CAACe,GAAG,CAAC;UAAA,EAAC;QAAA;QAAA;UAAA,OAAAZ,SAAA,CAAArC,IAAA;MAAA;IAAA,GAAAgC,QAAA;EAAA,CAClC;EAAA,gBAjBKF,eAAeA,CAAAoB,GAAA,EAAAC,GAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;IAAA,OAAAxB,KAAA,CAAA7B,KAAA,OAAAC,SAAA;EAAA;AAAA,GAiBpB;AACD,SAAS9B,oBAAoB,EAAEyD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}