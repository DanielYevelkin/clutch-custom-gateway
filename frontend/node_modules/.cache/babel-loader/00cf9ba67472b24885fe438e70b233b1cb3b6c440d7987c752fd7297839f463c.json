{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useEventCallback } from '@mui/material/utils';\nimport { onSpaceOrEnter } from '../utils/utils';\nimport { useLocaleText, useUtils } from '../hooks/useUtils';\nimport { getDisplayDate } from '../utils/text-field-helper';\n// TODO: why is this called \"Pure*\" when it's not memoized? Does \"Pure\" mean \"readonly\"?\nexport var PureDateInput = /*#__PURE__*/React.forwardRef(function PureDateInput(props, ref) {\n  var disabled = props.disabled,\n    getOpenDialogAriaTextProp = props.getOpenDialogAriaText,\n    inputFormat = props.inputFormat,\n    InputProps = props.InputProps,\n    inputRef = props.inputRef,\n    label = props.label,\n    onOpen = props.openPicker,\n    rawValue = props.rawValue,\n    renderInput = props.renderInput,\n    _props$TextFieldProps = props.TextFieldProps,\n    TextFieldProps = _props$TextFieldProps === void 0 ? {} : _props$TextFieldProps,\n    validationError = props.validationError,\n    className = props.className;\n  var localeText = useLocaleText(); // The prop can not be deprecated\n  // Default is \"Choose date, ...\", but time pickers override it with \"Choose time, ...\"\n\n  var getOpenDialogAriaText = getOpenDialogAriaTextProp != null ? getOpenDialogAriaTextProp : localeText.openDatePickerDialogue;\n  var utils = useUtils();\n  var PureDateInputProps = React.useMemo(function () {\n    return _extends({}, InputProps, {\n      readOnly: true\n    });\n  }, [InputProps]);\n  var inputValue = getDisplayDate(utils, rawValue, inputFormat);\n  var handleOnClick = useEventCallback(function (event) {\n    event.stopPropagation();\n    onOpen();\n  });\n  return renderInput(_extends({\n    label: label,\n    disabled: disabled,\n    ref: ref,\n    inputRef: inputRef,\n    error: validationError,\n    InputProps: PureDateInputProps,\n    className: className\n  }, !props.readOnly && !props.disabled && {\n    onClick: handleOnClick\n  }, {\n    inputProps: _extends({\n      disabled: disabled,\n      readOnly: true,\n      'aria-readonly': true,\n      'aria-label': getOpenDialogAriaText(rawValue, utils),\n      value: inputValue\n    }, !props.readOnly && {\n      onClick: handleOnClick\n    }, {\n      onKeyDown: onSpaceOrEnter(onOpen)\n    })\n  }, TextFieldProps));\n});","map":{"version":3,"names":["_extends","React","useEventCallback","onSpaceOrEnter","useLocaleText","useUtils","getDisplayDate","PureDateInput","forwardRef","props","ref","disabled","getOpenDialogAriaTextProp","getOpenDialogAriaText","inputFormat","InputProps","inputRef","label","onOpen","openPicker","rawValue","renderInput","_props$TextFieldProps","TextFieldProps","validationError","className","localeText","openDatePickerDialogue","utils","PureDateInputProps","useMemo","readOnly","inputValue","handleOnClick","event","stopPropagation","error","onClick","inputProps","value","onKeyDown"],"sources":["/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@mui/x-date-pickers/internals/components/PureDateInput.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useEventCallback } from '@mui/material/utils';\nimport { onSpaceOrEnter } from '../utils/utils';\nimport { useLocaleText, useUtils } from '../hooks/useUtils';\nimport { getDisplayDate } from '../utils/text-field-helper';\n// TODO: why is this called \"Pure*\" when it's not memoized? Does \"Pure\" mean \"readonly\"?\nexport const PureDateInput = /*#__PURE__*/React.forwardRef(function PureDateInput(props, ref) {\n  const {\n    disabled,\n    getOpenDialogAriaText: getOpenDialogAriaTextProp,\n    inputFormat,\n    InputProps,\n    inputRef,\n    label,\n    openPicker: onOpen,\n    rawValue,\n    renderInput,\n    TextFieldProps = {},\n    validationError,\n    className\n  } = props;\n  const localeText = useLocaleText(); // The prop can not be deprecated\n  // Default is \"Choose date, ...\", but time pickers override it with \"Choose time, ...\"\n\n  const getOpenDialogAriaText = getOpenDialogAriaTextProp != null ? getOpenDialogAriaTextProp : localeText.openDatePickerDialogue;\n  const utils = useUtils();\n  const PureDateInputProps = React.useMemo(() => _extends({}, InputProps, {\n    readOnly: true\n  }), [InputProps]);\n  const inputValue = getDisplayDate(utils, rawValue, inputFormat);\n  const handleOnClick = useEventCallback(event => {\n    event.stopPropagation();\n    onOpen();\n  });\n  return renderInput(_extends({\n    label,\n    disabled,\n    ref,\n    inputRef,\n    error: validationError,\n    InputProps: PureDateInputProps,\n    className\n  }, !props.readOnly && !props.disabled && {\n    onClick: handleOnClick\n  }, {\n    inputProps: _extends({\n      disabled,\n      readOnly: true,\n      'aria-readonly': true,\n      'aria-label': getOpenDialogAriaText(rawValue, utils),\n      value: inputValue\n    }, !props.readOnly && {\n      onClick: handleOnClick\n    }, {\n      onKeyDown: onSpaceOrEnter(onOpen)\n    })\n  }, TextFieldProps));\n});"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,aAAa,EAAEC,QAAQ,QAAQ,mBAAmB;AAC3D,SAASC,cAAc,QAAQ,4BAA4B;AAC3D;AACA,OAAO,IAAMC,aAAa,GAAG,aAAaN,KAAK,CAACO,UAAU,CAAC,SAASD,aAAaA,CAACE,KAAK,EAAEC,GAAG,EAAE;EAC5F,IACEC,QAAQ,GAYNF,KAAK,CAZPE,QAAQ;IACeC,yBAAyB,GAW9CH,KAAK,CAXPI,qBAAqB;IACrBC,WAAW,GAUTL,KAAK,CAVPK,WAAW;IACXC,UAAU,GASRN,KAAK,CATPM,UAAU;IACVC,QAAQ,GAQNP,KAAK,CARPO,QAAQ;IACRC,KAAK,GAOHR,KAAK,CAPPQ,KAAK;IACOC,MAAM,GAMhBT,KAAK,CANPU,UAAU;IACVC,QAAQ,GAKNX,KAAK,CALPW,QAAQ;IACRC,WAAW,GAITZ,KAAK,CAJPY,WAAW;IAAAC,qBAAA,GAITb,KAAK,CAHPc,cAAc;IAAdA,cAAc,GAAAD,qBAAA,cAAG,CAAC,CAAC,GAAAA,qBAAA;IACnBE,eAAe,GAEbf,KAAK,CAFPe,eAAe;IACfC,SAAS,GACPhB,KAAK,CADPgB,SAAS;EAEX,IAAMC,UAAU,GAAGtB,aAAa,CAAC,CAAC,CAAC,CAAC;EACpC;;EAEA,IAAMS,qBAAqB,GAAGD,yBAAyB,IAAI,IAAI,GAAGA,yBAAyB,GAAGc,UAAU,CAACC,sBAAsB;EAC/H,IAAMC,KAAK,GAAGvB,QAAQ,CAAC,CAAC;EACxB,IAAMwB,kBAAkB,GAAG5B,KAAK,CAAC6B,OAAO,CAAC;IAAA,OAAM9B,QAAQ,CAAC,CAAC,CAAC,EAAEe,UAAU,EAAE;MACtEgB,QAAQ,EAAE;IACZ,CAAC,CAAC;EAAA,GAAE,CAAChB,UAAU,CAAC,CAAC;EACjB,IAAMiB,UAAU,GAAG1B,cAAc,CAACsB,KAAK,EAAER,QAAQ,EAAEN,WAAW,CAAC;EAC/D,IAAMmB,aAAa,GAAG/B,gBAAgB,CAAC,UAAAgC,KAAK,EAAI;IAC9CA,KAAK,CAACC,eAAe,CAAC,CAAC;IACvBjB,MAAM,CAAC,CAAC;EACV,CAAC,CAAC;EACF,OAAOG,WAAW,CAACrB,QAAQ,CAAC;IAC1BiB,KAAK,EAALA,KAAK;IACLN,QAAQ,EAARA,QAAQ;IACRD,GAAG,EAAHA,GAAG;IACHM,QAAQ,EAARA,QAAQ;IACRoB,KAAK,EAAEZ,eAAe;IACtBT,UAAU,EAAEc,kBAAkB;IAC9BJ,SAAS,EAATA;EACF,CAAC,EAAE,CAAChB,KAAK,CAACsB,QAAQ,IAAI,CAACtB,KAAK,CAACE,QAAQ,IAAI;IACvC0B,OAAO,EAAEJ;EACX,CAAC,EAAE;IACDK,UAAU,EAAEtC,QAAQ,CAAC;MACnBW,QAAQ,EAARA,QAAQ;MACRoB,QAAQ,EAAE,IAAI;MACd,eAAe,EAAE,IAAI;MACrB,YAAY,EAAElB,qBAAqB,CAACO,QAAQ,EAAEQ,KAAK,CAAC;MACpDW,KAAK,EAAEP;IACT,CAAC,EAAE,CAACvB,KAAK,CAACsB,QAAQ,IAAI;MACpBM,OAAO,EAAEJ;IACX,CAAC,EAAE;MACDO,SAAS,EAAErC,cAAc,CAACe,MAAM;IAClC,CAAC;EACH,CAAC,EAAEK,cAAc,CAAC,CAAC;AACrB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}