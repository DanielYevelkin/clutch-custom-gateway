{"ast":null,"code":"import React from \"react\";\nimport { Accordion, AccordionDetails, Button, ButtonGroup, client, Confirmation, MetadataTable, NotePanel, Resolver, useWizardContext } from \"@clutch-sh/core\";\nimport { useDataLayout } from \"@clutch-sh/data-layout\";\nimport { Wizard, WizardStep } from \"@clutch-sh/wizard\";\nvar InstanceIdentifier = function InstanceIdentifier(_ref) {\n  var resolverType = _ref.resolverType;\n  var _useWizardContext = useWizardContext(),\n    onSubmit = _useWizardContext.onSubmit;\n  var resolvedResourceData = useDataLayout(\"resourceData\");\n  var onResolve = function onResolve(_ref2) {\n    var results = _ref2.results;\n    // Decide how to process results.\n    resolvedResourceData.assign(results[0]);\n    onSubmit();\n  };\n  return React.createElement(Resolver, {\n    type: resolverType,\n    searchLimit: 1,\n    onResolve: onResolve\n  });\n};\nvar InstanceDetails = function InstanceDetails() {\n  var _a;\n  var _useWizardContext2 = useWizardContext(),\n    onSubmit = _useWizardContext2.onSubmit,\n    onBack = _useWizardContext2.onBack;\n  var resourceData = useDataLayout(\"resourceData\");\n  var instance = resourceData.displayValue();\n  var data = [{\n    name: \"Instance ID\",\n    value: instance.instanceId\n  }, {\n    name: \"Name\",\n    value: (_a = instance === null || instance === void 0 ? void 0 : instance.tags) === null || _a === void 0 ? void 0 : _a.Name\n  }, {\n    name: \"Account\",\n    value: instance.account\n  }, {\n    name: \"Region\",\n    value: instance.region\n  }, {\n    name: \"State\",\n    value: instance.state\n  }, {\n    name: \"Instance Type\",\n    value: instance.instanceType\n  }, {\n    name: \"Public IP Address\",\n    value: instance.publicIpAddress\n  }, {\n    name: \"Private IP Address\",\n    value: instance.privateIpAddress\n  }, {\n    name: \"Availability Zone\",\n    value: instance.availabilityZone\n  }];\n  var tags = [];\n  if (instance.tags) {\n    Object.keys(instance.tags).forEach(function (key) {\n      tags.push({\n        name: key,\n        value: instance.tags[key]\n      });\n    });\n  }\n  return React.createElement(WizardStep, {\n    error: resourceData.error,\n    isLoading: resourceData.isLoading\n  }, React.createElement(\"strong\", null, \"Instance Details\"), React.createElement(MetadataTable, {\n    data: data\n  }), tags.length > 0 && React.createElement(Accordion, {\n    title: \"Tags\"\n  }, React.createElement(AccordionDetails, null, React.createElement(MetadataTable, {\n    data: tags\n  }))), React.createElement(ButtonGroup, null, React.createElement(Button, {\n    text: \"Back\",\n    variant: \"neutral\",\n    onClick: function onClick() {\n      return onBack();\n    }\n  }), React.createElement(Button, {\n    text: \"Terminate\",\n    variant: \"destructive\",\n    onClick: onSubmit\n  })));\n};\nvar Confirm = function Confirm(_ref3) {\n  var notes = _ref3.notes;\n  var terminationData = useDataLayout(\"terminationData\");\n  var instance = useDataLayout(\"resourceData\").displayValue();\n  var data = [{\n    name: \"Instance ID\",\n    value: instance.instanceId\n  }, {\n    name: \"Region\",\n    value: instance.region\n  }];\n  return React.createElement(WizardStep, {\n    error: terminationData.error,\n    isLoading: terminationData.isLoading\n  }, React.createElement(Confirmation, {\n    action: \"Termination\"\n  }), React.createElement(MetadataTable, {\n    data: data\n  }), React.createElement(NotePanel, {\n    notes: notes\n  }));\n};\nvar TerminateInstance = function TerminateInstance(_ref4) {\n  var heading = _ref4.heading,\n    resolverType = _ref4.resolverType,\n    _ref4$notes = _ref4.notes,\n    notes = _ref4$notes === void 0 ? [] : _ref4$notes;\n  var dataLayout = {\n    resourceData: {},\n    terminationData: {\n      deps: [\"resourceData\"],\n      hydrator: function hydrator(resourceData) {\n        return client.post(\"/v1/aws/ec2/terminateInstance\", {\n          instance_id: resourceData.instanceId,\n          account: resourceData.account,\n          region: resourceData.region\n        });\n      }\n    }\n  };\n  return React.createElement(Wizard, {\n    dataLayout: dataLayout,\n    heading: heading\n  }, React.createElement(InstanceIdentifier, {\n    name: \"Lookup\",\n    resolverType: resolverType\n  }), React.createElement(InstanceDetails, {\n    name: \"Verify\"\n  }), React.createElement(Confirm, {\n    name: \"Result\",\n    notes: notes\n  }));\n};\nexport default TerminateInstance;","map":{"version":3,"names":["React","Accordion","AccordionDetails","Button","ButtonGroup","client","Confirmation","MetadataTable","NotePanel","Resolver","useWizardContext","useDataLayout","Wizard","WizardStep","InstanceIdentifier","_ref","resolverType","_useWizardContext","onSubmit","resolvedResourceData","onResolve","_ref2","results","assign","createElement","type","searchLimit","InstanceDetails","_a","_useWizardContext2","onBack","resourceData","instance","displayValue","data","name","value","instanceId","tags","Name","account","region","state","instanceType","publicIpAddress","privateIpAddress","availabilityZone","Object","keys","forEach","key","push","error","isLoading","length","title","text","variant","onClick","Confirm","_ref3","notes","terminationData","action","TerminateInstance","_ref4","heading","_ref4$notes","dataLayout","deps","hydrator","post","instance_id"],"sources":["/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@clutch-sh/ec2/dist/terminate-instance.js"],"sourcesContent":["import React from \"react\";\nimport { Accordion, AccordionDetails, Button, ButtonGroup, client, Confirmation, MetadataTable, NotePanel, Resolver, useWizardContext, } from \"@clutch-sh/core\";\nimport { useDataLayout } from \"@clutch-sh/data-layout\";\nimport { Wizard, WizardStep } from \"@clutch-sh/wizard\";\nconst InstanceIdentifier = ({ resolverType }) => {\n    const { onSubmit } = useWizardContext();\n    const resolvedResourceData = useDataLayout(\"resourceData\");\n    const onResolve = ({ results }) => {\n        // Decide how to process results.\n        resolvedResourceData.assign(results[0]);\n        onSubmit();\n    };\n    return React.createElement(Resolver, { type: resolverType, searchLimit: 1, onResolve: onResolve });\n};\nconst InstanceDetails = () => {\n    var _a;\n    const { onSubmit, onBack } = useWizardContext();\n    const resourceData = useDataLayout(\"resourceData\");\n    const instance = resourceData.displayValue();\n    const data = [\n        { name: \"Instance ID\", value: instance.instanceId },\n        { name: \"Name\", value: (_a = instance === null || instance === void 0 ? void 0 : instance.tags) === null || _a === void 0 ? void 0 : _a.Name },\n        { name: \"Account\", value: instance.account },\n        { name: \"Region\", value: instance.region },\n        { name: \"State\", value: instance.state },\n        { name: \"Instance Type\", value: instance.instanceType },\n        { name: \"Public IP Address\", value: instance.publicIpAddress },\n        { name: \"Private IP Address\", value: instance.privateIpAddress },\n        { name: \"Availability Zone\", value: instance.availabilityZone },\n    ];\n    const tags = [];\n    if (instance.tags) {\n        Object.keys(instance.tags).forEach(key => {\n            tags.push({ name: key, value: instance.tags[key] });\n        });\n    }\n    return (React.createElement(WizardStep, { error: resourceData.error, isLoading: resourceData.isLoading },\n        React.createElement(\"strong\", null, \"Instance Details\"),\n        React.createElement(MetadataTable, { data: data }),\n        tags.length > 0 && (React.createElement(Accordion, { title: \"Tags\" },\n            React.createElement(AccordionDetails, null,\n                React.createElement(MetadataTable, { data: tags })))),\n        React.createElement(ButtonGroup, null,\n            React.createElement(Button, { text: \"Back\", variant: \"neutral\", onClick: () => onBack() }),\n            React.createElement(Button, { text: \"Terminate\", variant: \"destructive\", onClick: onSubmit }))));\n};\nconst Confirm = ({ notes }) => {\n    const terminationData = useDataLayout(\"terminationData\");\n    const instance = useDataLayout(\"resourceData\").displayValue();\n    const data = [\n        { name: \"Instance ID\", value: instance.instanceId },\n        { name: \"Region\", value: instance.region },\n    ];\n    return (React.createElement(WizardStep, { error: terminationData.error, isLoading: terminationData.isLoading },\n        React.createElement(Confirmation, { action: \"Termination\" }),\n        React.createElement(MetadataTable, { data: data }),\n        React.createElement(NotePanel, { notes: notes })));\n};\nconst TerminateInstance = ({ heading, resolverType, notes = [] }) => {\n    const dataLayout = {\n        resourceData: {},\n        terminationData: {\n            deps: [\"resourceData\"],\n            hydrator: (resourceData) => {\n                return client.post(\"/v1/aws/ec2/terminateInstance\", {\n                    instance_id: resourceData.instanceId,\n                    account: resourceData.account,\n                    region: resourceData.region,\n                });\n            },\n        },\n    };\n    return (React.createElement(Wizard, { dataLayout: dataLayout, heading: heading },\n        React.createElement(InstanceIdentifier, { name: \"Lookup\", resolverType: resolverType }),\n        React.createElement(InstanceDetails, { name: \"Verify\" }),\n        React.createElement(Confirm, { name: \"Result\", notes: notes })));\n};\nexport default TerminateInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}