{"ast":null,"code":"import _slicedToArray from \"/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useIsDayDisabled } from '../internals/hooks/validation/useDateValidation';\nimport { useUtils, useNow } from '../internals/hooks/useUtils';\nexport var createCalendarStateReducer = function createCalendarStateReducer(reduceAnimations, disableSwitchToMonthOnDayFocus, utils) {\n  return function (state, action) {\n    switch (action.type) {\n      case 'changeMonth':\n        return _extends({}, state, {\n          slideDirection: action.direction,\n          currentMonth: action.newMonth,\n          isMonthSwitchingAnimating: !reduceAnimations\n        });\n      case 'finishMonthSwitchingAnimation':\n        return _extends({}, state, {\n          isMonthSwitchingAnimating: false\n        });\n      case 'changeFocusedDay':\n        {\n          if (state.focusedDay != null && action.focusedDay != null && utils.isSameDay(action.focusedDay, state.focusedDay)) {\n            return state;\n          }\n          var needMonthSwitch = action.focusedDay != null && !disableSwitchToMonthOnDayFocus && !utils.isSameMonth(state.currentMonth, action.focusedDay);\n          return _extends({}, state, {\n            focusedDay: action.focusedDay,\n            isMonthSwitchingAnimating: needMonthSwitch && !reduceAnimations && !action.withoutMonthSwitchingAnimation,\n            currentMonth: needMonthSwitch ? utils.startOfMonth(action.focusedDay) : state.currentMonth,\n            slideDirection: action.focusedDay != null && utils.isAfterDay(action.focusedDay, state.currentMonth) ? 'left' : 'right'\n          });\n        }\n      default:\n        throw new Error('missing support');\n    }\n  };\n};\nexport var useCalendarState = function useCalendarState(_ref2) {\n  var date = _ref2.date,\n    defaultCalendarMonth = _ref2.defaultCalendarMonth,\n    disableFuture = _ref2.disableFuture,\n    disablePast = _ref2.disablePast,\n    _ref2$disableSwitchTo = _ref2.disableSwitchToMonthOnDayFocus,\n    disableSwitchToMonthOnDayFocus = _ref2$disableSwitchTo === void 0 ? false : _ref2$disableSwitchTo,\n    maxDate = _ref2.maxDate,\n    minDate = _ref2.minDate,\n    onMonthChange = _ref2.onMonthChange,\n    reduceAnimations = _ref2.reduceAnimations,\n    shouldDisableDate = _ref2.shouldDisableDate;\n  var _ref;\n  var now = useNow();\n  var utils = useUtils();\n  var reducerFn = React.useRef(createCalendarStateReducer(Boolean(reduceAnimations), disableSwitchToMonthOnDayFocus, utils)).current;\n  var _React$useReducer = React.useReducer(reducerFn, {\n      isMonthSwitchingAnimating: false,\n      focusedDay: date || now,\n      currentMonth: utils.startOfMonth((_ref = date != null ? date : defaultCalendarMonth) != null ? _ref : now),\n      slideDirection: 'left'\n    }),\n    _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n    calendarState = _React$useReducer2[0],\n    dispatch = _React$useReducer2[1];\n  var handleChangeMonth = React.useCallback(function (payload) {\n    dispatch(_extends({\n      type: 'changeMonth'\n    }, payload));\n    if (onMonthChange) {\n      onMonthChange(payload.newMonth);\n    }\n  }, [onMonthChange]);\n  var changeMonth = React.useCallback(function (newDate) {\n    var newDateRequested = newDate != null ? newDate : now;\n    if (utils.isSameMonth(newDateRequested, calendarState.currentMonth)) {\n      return;\n    }\n    handleChangeMonth({\n      newMonth: utils.startOfMonth(newDateRequested),\n      direction: utils.isAfterDay(newDateRequested, calendarState.currentMonth) ? 'left' : 'right'\n    });\n  }, [calendarState.currentMonth, handleChangeMonth, now, utils]);\n  var isDateDisabled = useIsDayDisabled({\n    shouldDisableDate: shouldDisableDate,\n    minDate: minDate,\n    maxDate: maxDate,\n    disableFuture: disableFuture,\n    disablePast: disablePast\n  });\n  var onMonthSwitchingAnimationEnd = React.useCallback(function () {\n    dispatch({\n      type: 'finishMonthSwitchingAnimation'\n    });\n  }, []);\n  var changeFocusedDay = React.useCallback(function (newFocusedDate, withoutMonthSwitchingAnimation) {\n    if (!isDateDisabled(newFocusedDate)) {\n      dispatch({\n        type: 'changeFocusedDay',\n        focusedDay: newFocusedDate,\n        withoutMonthSwitchingAnimation: withoutMonthSwitchingAnimation\n      });\n    }\n  }, [isDateDisabled]);\n  return {\n    calendarState: calendarState,\n    changeMonth: changeMonth,\n    changeFocusedDay: changeFocusedDay,\n    isDateDisabled: isDateDisabled,\n    onMonthSwitchingAnimationEnd: onMonthSwitchingAnimationEnd,\n    handleChangeMonth: handleChangeMonth\n  };\n};","map":{"version":3,"names":["_extends","React","useIsDayDisabled","useUtils","useNow","createCalendarStateReducer","reduceAnimations","disableSwitchToMonthOnDayFocus","utils","state","action","type","slideDirection","direction","currentMonth","newMonth","isMonthSwitchingAnimating","focusedDay","isSameDay","needMonthSwitch","isSameMonth","withoutMonthSwitchingAnimation","startOfMonth","isAfterDay","Error","useCalendarState","_ref2","date","defaultCalendarMonth","disableFuture","disablePast","_ref2$disableSwitchTo","maxDate","minDate","onMonthChange","shouldDisableDate","_ref","now","reducerFn","useRef","Boolean","current","_React$useReducer","useReducer","_React$useReducer2","_slicedToArray","calendarState","dispatch","handleChangeMonth","useCallback","payload","changeMonth","newDate","newDateRequested","isDateDisabled","onMonthSwitchingAnimationEnd","changeFocusedDay","newFocusedDate"],"sources":["/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@mui/x-date-pickers/CalendarPicker/useCalendarState.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useIsDayDisabled } from '../internals/hooks/validation/useDateValidation';\nimport { useUtils, useNow } from '../internals/hooks/useUtils';\nexport const createCalendarStateReducer = (reduceAnimations, disableSwitchToMonthOnDayFocus, utils) => (state, action) => {\n  switch (action.type) {\n    case 'changeMonth':\n      return _extends({}, state, {\n        slideDirection: action.direction,\n        currentMonth: action.newMonth,\n        isMonthSwitchingAnimating: !reduceAnimations\n      });\n\n    case 'finishMonthSwitchingAnimation':\n      return _extends({}, state, {\n        isMonthSwitchingAnimating: false\n      });\n\n    case 'changeFocusedDay':\n      {\n        if (state.focusedDay != null && action.focusedDay != null && utils.isSameDay(action.focusedDay, state.focusedDay)) {\n          return state;\n        }\n\n        const needMonthSwitch = action.focusedDay != null && !disableSwitchToMonthOnDayFocus && !utils.isSameMonth(state.currentMonth, action.focusedDay);\n        return _extends({}, state, {\n          focusedDay: action.focusedDay,\n          isMonthSwitchingAnimating: needMonthSwitch && !reduceAnimations && !action.withoutMonthSwitchingAnimation,\n          currentMonth: needMonthSwitch ? utils.startOfMonth(action.focusedDay) : state.currentMonth,\n          slideDirection: action.focusedDay != null && utils.isAfterDay(action.focusedDay, state.currentMonth) ? 'left' : 'right'\n        });\n      }\n\n    default:\n      throw new Error('missing support');\n  }\n};\nexport const useCalendarState = ({\n  date,\n  defaultCalendarMonth,\n  disableFuture,\n  disablePast,\n  disableSwitchToMonthOnDayFocus = false,\n  maxDate,\n  minDate,\n  onMonthChange,\n  reduceAnimations,\n  shouldDisableDate\n}) => {\n  var _ref;\n\n  const now = useNow();\n  const utils = useUtils();\n  const reducerFn = React.useRef(createCalendarStateReducer(Boolean(reduceAnimations), disableSwitchToMonthOnDayFocus, utils)).current;\n  const [calendarState, dispatch] = React.useReducer(reducerFn, {\n    isMonthSwitchingAnimating: false,\n    focusedDay: date || now,\n    currentMonth: utils.startOfMonth((_ref = date != null ? date : defaultCalendarMonth) != null ? _ref : now),\n    slideDirection: 'left'\n  });\n  const handleChangeMonth = React.useCallback(payload => {\n    dispatch(_extends({\n      type: 'changeMonth'\n    }, payload));\n\n    if (onMonthChange) {\n      onMonthChange(payload.newMonth);\n    }\n  }, [onMonthChange]);\n  const changeMonth = React.useCallback(newDate => {\n    const newDateRequested = newDate != null ? newDate : now;\n\n    if (utils.isSameMonth(newDateRequested, calendarState.currentMonth)) {\n      return;\n    }\n\n    handleChangeMonth({\n      newMonth: utils.startOfMonth(newDateRequested),\n      direction: utils.isAfterDay(newDateRequested, calendarState.currentMonth) ? 'left' : 'right'\n    });\n  }, [calendarState.currentMonth, handleChangeMonth, now, utils]);\n  const isDateDisabled = useIsDayDisabled({\n    shouldDisableDate,\n    minDate,\n    maxDate,\n    disableFuture,\n    disablePast\n  });\n  const onMonthSwitchingAnimationEnd = React.useCallback(() => {\n    dispatch({\n      type: 'finishMonthSwitchingAnimation'\n    });\n  }, []);\n  const changeFocusedDay = React.useCallback((newFocusedDate, withoutMonthSwitchingAnimation) => {\n    if (!isDateDisabled(newFocusedDate)) {\n      dispatch({\n        type: 'changeFocusedDay',\n        focusedDay: newFocusedDate,\n        withoutMonthSwitchingAnimation\n      });\n    }\n  }, [isDateDisabled]);\n  return {\n    calendarState,\n    changeMonth,\n    changeFocusedDay,\n    isDateDisabled,\n    onMonthSwitchingAnimationEnd,\n    handleChangeMonth\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}