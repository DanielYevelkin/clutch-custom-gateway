{"ast":null,"code":"import _objectSpread from \"/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { createSearchParams, useLocation, useNavigate as rrUseNavigate, useParams, useSearchParams as rrUseSearchParams } from \"react-router-dom\";\nvar UTM_PARAMS = [\"utm_source\", \"utm_medium\", \"utm_campaign\", \"utm_term\", \"utm_content\"];\n/**\n * Convert custom search param object to string.\n *\n * ```ts\n * const searchObject = new URLSearchParams({ query: \"value\" });\n * const searchString = convertSearchParam(searchObject);\n * console.log(searchString); // \"?query=value\"\n * ```\n */\nvar convertSearchParam = function convertSearchParam(params) {\n  var p = params.toString();\n  if (p.indexOf(\"=\") < 0) {\n    return \"\";\n  }\n  return \"?\".concat(p);\n};\n/**\n * Returns an imperative method for changing the location.\n *\n * This method wraps useNavigate from react-router but has custom\n * logic that:\n *   * Automatically preserves UTM parameters during navigation\n *   * Easily preserves the origin of navigation in state\n *   * Provides an easy interface to specify search parameters\n *\n * @see https://reactrouter.com/api/useNavigate for more information.\n */\nvar useNavigate = function useNavigate() {\n  var navigation = rrUseNavigate();\n  var _rrUseSearchParams = rrUseSearchParams(),\n    _rrUseSearchParams2 = _slicedToArray(_rrUseSearchParams, 1),\n    currentSearchParams = _rrUseSearchParams2[0];\n  var customNavigate = function customNavigate(to) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _a;\n    var finalNavOptions = {};\n    if (options === null || options === void 0 ? void 0 : options.replace) {\n      finalNavOptions.replace = options.replace;\n    }\n    if (options === null || options === void 0 ? void 0 : options.state) {\n      finalNavOptions.state = options.state;\n    }\n    var newSearchParams = {};\n    if (typeof to !== \"string\") {\n      newSearchParams = (to === null || to === void 0 ? void 0 : to.search) || {};\n    }\n    var searchParams = createSearchParams(newSearchParams);\n    if (options === null || options === void 0 ? void 0 : options.utm) {\n      UTM_PARAMS.forEach(function (p) {\n        var param = currentSearchParams.get(p);\n        if (param && !searchParams.get(p)) {\n          searchParams.set(p, param);\n        }\n      });\n    }\n    if (options === null || options === void 0 ? void 0 : options.origin) {\n      var origin = \"\".concat(window.location.pathname).concat(window.location.search);\n      // n.b. if origin is specified in the options don't overwrite it.\n      // @ts-ignore\n      if (!((_a = options.state) === null || _a === void 0 ? void 0 : _a.origin)) {\n        // @ts-ignore\n        finalNavOptions.state = _objectSpread(_objectSpread({}, finalNavOptions.state), {}, {\n          origin: origin\n        });\n      }\n    }\n    var navPath = {};\n    if (typeof to === \"string\") {\n      navPath.pathname = to;\n    } else {\n      navPath = {\n        pathname: to === null || to === void 0 ? void 0 : to.pathname,\n        hash: to === null || to === void 0 ? void 0 : to.hash\n      };\n    }\n    var _navPath$pathname$spl = navPath.pathname.split(\"?\"),\n      _navPath$pathname$spl2 = _slicedToArray(_navPath$pathname$spl, 2),\n      path = _navPath$pathname$spl2[0],\n      search = _navPath$pathname$spl2[1];\n    navPath.pathname = path;\n    if (search) {\n      new URLSearchParams(search).forEach(function (v, k) {\n        searchParams.set(k, v);\n      });\n    }\n    navPath.search = convertSearchParam(searchParams);\n    navigation(navPath, finalNavOptions);\n  };\n  return customNavigate;\n};\n/**\n * A convenience wrapper for reading and writing search parameters via the\n * URLSearchParams interface. This custom hook wraps react-routers implementation\n * but changes the function to write search parameters to preserve UTM parameters\n * by default.\n */\nvar useSearchParams = function useSearchParams() {\n  var _rrUseSearchParams3 = rrUseSearchParams(),\n    _rrUseSearchParams4 = _slicedToArray(_rrUseSearchParams3, 2),\n    searchParams = _rrUseSearchParams4[0],\n    setSearchParams = _rrUseSearchParams4[1];\n  var customSetSearchParams = function customSetSearchParams(params, options) {\n    var newSearchParams = params;\n    var reactRouterOptions = {};\n    if (options === null || options === void 0 ? void 0 : options.replace) {\n      reactRouterOptions.replace = options.replace;\n    }\n    if (options === null || options === void 0 ? void 0 : options.state) {\n      reactRouterOptions.state = options.state;\n    }\n    if (options === null || options === void 0 ? void 0 : options.utm) {\n      UTM_PARAMS.forEach(function (p) {\n        var param = searchParams.get(p);\n        if (param && !newSearchParams[p]) {\n          newSearchParams[p] = param;\n        }\n      });\n    }\n    setSearchParams(newSearchParams, reactRouterOptions);\n  };\n  return [searchParams, customSetSearchParams];\n};\nexport { convertSearchParam, useLocation, useParams, useSearchParams, useNavigate };","map":{"version":3,"names":["createSearchParams","useLocation","useNavigate","rrUseNavigate","useParams","useSearchParams","rrUseSearchParams","UTM_PARAMS","convertSearchParam","params","p","toString","indexOf","concat","navigation","_rrUseSearchParams","_rrUseSearchParams2","_slicedToArray","currentSearchParams","customNavigate","to","options","arguments","length","undefined","_a","finalNavOptions","replace","state","newSearchParams","search","searchParams","utm","forEach","param","get","set","origin","window","location","pathname","_objectSpread","navPath","hash","_navPath$pathname$spl","split","_navPath$pathname$spl2","path","URLSearchParams","v","k","_rrUseSearchParams3","_rrUseSearchParams4","setSearchParams","customSetSearchParams","reactRouterOptions"],"sources":["/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@clutch-sh/core/dist/navigation.js"],"sourcesContent":["import { createSearchParams, useLocation, useNavigate as rrUseNavigate, useParams, useSearchParams as rrUseSearchParams, } from \"react-router-dom\";\nconst UTM_PARAMS = [\"utm_source\", \"utm_medium\", \"utm_campaign\", \"utm_term\", \"utm_content\"];\n/**\n * Convert custom search param object to string.\n *\n * ```ts\n * const searchObject = new URLSearchParams({ query: \"value\" });\n * const searchString = convertSearchParam(searchObject);\n * console.log(searchString); // \"?query=value\"\n * ```\n */\nconst convertSearchParam = (params) => {\n    const p = params.toString();\n    if (p.indexOf(\"=\") < 0) {\n        return \"\";\n    }\n    return `?${p}`;\n};\n/**\n * Returns an imperative method for changing the location.\n *\n * This method wraps useNavigate from react-router but has custom\n * logic that:\n *   * Automatically preserves UTM parameters during navigation\n *   * Easily preserves the origin of navigation in state\n *   * Provides an easy interface to specify search parameters\n *\n * @see https://reactrouter.com/api/useNavigate for more information.\n */\nconst useNavigate = () => {\n    const navigation = rrUseNavigate();\n    const [currentSearchParams] = rrUseSearchParams();\n    const customNavigate = (to, options = {}) => {\n        var _a;\n        const finalNavOptions = {};\n        if (options === null || options === void 0 ? void 0 : options.replace) {\n            finalNavOptions.replace = options.replace;\n        }\n        if (options === null || options === void 0 ? void 0 : options.state) {\n            finalNavOptions.state = options.state;\n        }\n        let newSearchParams = {};\n        if (typeof to !== \"string\") {\n            newSearchParams = ((to === null || to === void 0 ? void 0 : to.search) || {});\n        }\n        const searchParams = createSearchParams(newSearchParams);\n        if (options === null || options === void 0 ? void 0 : options.utm) {\n            UTM_PARAMS.forEach(p => {\n                const param = currentSearchParams.get(p);\n                if (param && !searchParams.get(p)) {\n                    searchParams.set(p, param);\n                }\n            });\n        }\n        if (options === null || options === void 0 ? void 0 : options.origin) {\n            const origin = `${window.location.pathname}${window.location.search}`;\n            // n.b. if origin is specified in the options don't overwrite it.\n            // @ts-ignore\n            if (!((_a = options.state) === null || _a === void 0 ? void 0 : _a.origin)) {\n                // @ts-ignore\n                finalNavOptions.state = { ...finalNavOptions.state, origin };\n            }\n        }\n        let navPath = {};\n        if (typeof to === \"string\") {\n            navPath.pathname = to;\n        }\n        else {\n            navPath = { pathname: to === null || to === void 0 ? void 0 : to.pathname, hash: to === null || to === void 0 ? void 0 : to.hash };\n        }\n        const [path, search] = navPath.pathname.split(\"?\");\n        navPath.pathname = path;\n        if (search) {\n            new URLSearchParams(search).forEach((v, k) => {\n                searchParams.set(k, v);\n            });\n        }\n        navPath.search = convertSearchParam(searchParams);\n        navigation(navPath, finalNavOptions);\n    };\n    return customNavigate;\n};\n/**\n * A convenience wrapper for reading and writing search parameters via the\n * URLSearchParams interface. This custom hook wraps react-routers implementation\n * but changes the function to write search parameters to preserve UTM parameters\n * by default.\n */\nconst useSearchParams = () => {\n    const [searchParams, setSearchParams] = rrUseSearchParams();\n    const customSetSearchParams = (params, options) => {\n        const newSearchParams = params;\n        const reactRouterOptions = {};\n        if (options === null || options === void 0 ? void 0 : options.replace) {\n            reactRouterOptions.replace = options.replace;\n        }\n        if (options === null || options === void 0 ? void 0 : options.state) {\n            reactRouterOptions.state = options.state;\n        }\n        if (options === null || options === void 0 ? void 0 : options.utm) {\n            UTM_PARAMS.forEach(p => {\n                const param = searchParams.get(p);\n                if (param && !newSearchParams[p]) {\n                    newSearchParams[p] = param;\n                }\n            });\n        }\n        setSearchParams(newSearchParams, reactRouterOptions);\n    };\n    return [searchParams, customSetSearchParams];\n};\nexport { convertSearchParam, useLocation, useParams, useSearchParams, useNavigate };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}