{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nvar isISPickers = {\n  // Calendar navigation\n  previousMonth: 'Fyrri mánuður',\n  nextMonth: 'Næsti mánuður',\n  // View navigation\n  openPreviousView: 'opna fyrri skoðun',\n  openNextView: 'opna næstu skoðun',\n  calendarViewSwitchingButtonAriaLabel: function calendarViewSwitchingButtonAriaLabel(view) {\n    return view === 'year' ? 'ársskoðun er opin, skipta yfir í dagatalsskoðun' : 'dagatalsskoðun er opin, skipta yfir í ársskoðun';\n  },\n  inputModeToggleButtonAriaLabel: function inputModeToggleButtonAriaLabel(isKeyboardInputOpen, viewType) {\n    var viewTypeTranslated = viewType === 'calendar' ? 'dagatals' : 'klukku';\n    return isKeyboardInputOpen ? \"textainnsl\\xE1ttur er opinn, fara \\xED \".concat(viewTypeTranslated, \"sko\\xF0un\") : \"\".concat(viewTypeTranslated, \"sko\\xF0un er opin, opna fyrir textainnsl\\xE1tt\");\n  },\n  // DateRange placeholders\n  start: 'Upphaf',\n  end: 'Endir',\n  // Action bar\n  cancelButtonLabel: 'Hætta við',\n  clearButtonLabel: 'Hreinsa',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Í dag',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: 'Velja dagsetningu',\n  dateTimePickerDefaultToolbarTitle: 'Velja dagsetningu og tíma',\n  timePickerDefaultToolbarTitle: 'Velja tíma',\n  dateRangePickerDefaultToolbarTitle: 'Velja tímabil',\n  // Clock labels\n  clockLabelText: function clockLabelText(view, time, adapter) {\n    return \"Select \".concat(view, \". \").concat(time === null ? 'Enginn tími valinn' : \"Valinn t\\xEDmi er \".concat(adapter.format(time, 'fullTime')));\n  },\n  hoursClockNumberText: function hoursClockNumberText(hours) {\n    return \"\".concat(hours, \" klukkustundir\");\n  },\n  minutesClockNumberText: function minutesClockNumberText(minutes) {\n    return \"\".concat(minutes, \" m\\xEDn\\xFAtur\");\n  },\n  secondsClockNumberText: function secondsClockNumberText(seconds) {\n    return \"\".concat(seconds, \" sek\\xFAndur\");\n  },\n  // Open picker labels\n  openDatePickerDialogue: function openDatePickerDialogue(rawValue, utils) {\n    return rawValue && utils.isValid(utils.date(rawValue)) ? \"Velja dagsetningu, valin dagsetning er \".concat(utils.format(utils.date(rawValue), 'fullDate')) : 'Velja dagsetningu';\n  },\n  openTimePickerDialogue: function openTimePickerDialogue(rawValue, utils) {\n    return rawValue && utils.isValid(utils.date(rawValue)) ? \"Velja t\\xEDma, valinn t\\xEDmi er \".concat(utils.format(utils.date(rawValue), 'fullTime')) : 'Velja tíma';\n  },\n  // Table labels\n  timeTableLabel: 'velja tíma',\n  dateTableLabel: 'velja dagsetningu'\n};\nexport var isIS = getPickersLocalization(isISPickers);","map":{"version":3,"names":["getPickersLocalization","isISPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","inputModeToggleButtonAriaLabel","isKeyboardInputOpen","viewType","viewTypeTranslated","concat","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","datePickerDefaultToolbarTitle","dateTimePickerDefaultToolbarTitle","timePickerDefaultToolbarTitle","dateRangePickerDefaultToolbarTitle","clockLabelText","time","adapter","format","hoursClockNumberText","hours","minutesClockNumberText","minutes","secondsClockNumberText","seconds","openDatePickerDialogue","rawValue","utils","isValid","date","openTimePickerDialogue","timeTableLabel","dateTableLabel","isIS"],"sources":["/home/daniel/go/src/github.com/DanielYevelkin/clutch-custom-gateway/frontend/node_modules/@mui/x-date-pickers/locales/isIS.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\nconst isISPickers = {\n  // Calendar navigation\n  previousMonth: 'Fyrri mánuður',\n  nextMonth: 'Næsti mánuður',\n  // View navigation\n  openPreviousView: 'opna fyrri skoðun',\n  openNextView: 'opna næstu skoðun',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'ársskoðun er opin, skipta yfir í dagatalsskoðun' : 'dagatalsskoðun er opin, skipta yfir í ársskoðun',\n  inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => {\n    const viewTypeTranslated = viewType === 'calendar' ? 'dagatals' : 'klukku';\n    return isKeyboardInputOpen ? `textainnsláttur er opinn, fara í ${viewTypeTranslated}skoðun` : `${viewTypeTranslated}skoðun er opin, opna fyrir textainnslátt`;\n  },\n  // DateRange placeholders\n  start: 'Upphaf',\n  end: 'Endir',\n  // Action bar\n  cancelButtonLabel: 'Hætta við',\n  clearButtonLabel: 'Hreinsa',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Í dag',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: 'Velja dagsetningu',\n  dateTimePickerDefaultToolbarTitle: 'Velja dagsetningu og tíma',\n  timePickerDefaultToolbarTitle: 'Velja tíma',\n  dateRangePickerDefaultToolbarTitle: 'Velja tímabil',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Select ${view}. ${time === null ? 'Enginn tími valinn' : `Valinn tími er ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} klukkustundir`,\n  minutesClockNumberText: minutes => `${minutes} mínútur`,\n  secondsClockNumberText: seconds => `${seconds} sekúndur`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Velja dagsetningu, valin dagsetning er ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Velja dagsetningu',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Velja tíma, valinn tími er ${utils.format(utils.date(rawValue), 'fullTime')}` : 'Velja tíma',\n  // Table labels\n  timeTableLabel: 'velja tíma',\n  dateTableLabel: 'velja dagsetningu'\n};\nexport const isIS = getPickersLocalization(isISPickers);"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,gCAAgC;AACvE,IAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,eAAe;EAC9BC,SAAS,EAAE,eAAe;EAC1B;EACAC,gBAAgB,EAAE,mBAAmB;EACrCC,YAAY,EAAE,mBAAmB;EACjCC,oCAAoC,EAAE,SAAAA,qCAAAC,IAAI;IAAA,OAAIA,IAAI,KAAK,MAAM,GAAG,iDAAiD,GAAG,iDAAiD;EAAA;EACrKC,8BAA8B,EAAE,SAAAA,+BAACC,mBAAmB,EAAEC,QAAQ,EAAK;IACjE,IAAMC,kBAAkB,GAAGD,QAAQ,KAAK,UAAU,GAAG,UAAU,GAAG,QAAQ;IAC1E,OAAOD,mBAAmB,6CAAAG,MAAA,CAAuCD,kBAAkB,oBAAAC,MAAA,CAAcD,kBAAkB,mDAA0C;EAC/J,CAAC;EACD;EACAE,KAAK,EAAE,QAAQ;EACfC,GAAG,EAAE,OAAO;EACZ;EACAC,iBAAiB,EAAE,WAAW;EAC9BC,gBAAgB,EAAE,SAAS;EAC3BC,aAAa,EAAE,IAAI;EACnBC,gBAAgB,EAAE,OAAO;EACzB;EACAC,6BAA6B,EAAE,mBAAmB;EAClDC,iCAAiC,EAAE,2BAA2B;EAC9DC,6BAA6B,EAAE,YAAY;EAC3CC,kCAAkC,EAAE,eAAe;EACnD;EACAC,cAAc,EAAE,SAAAA,eAAChB,IAAI,EAAEiB,IAAI,EAAEC,OAAO;IAAA,iBAAAb,MAAA,CAAeL,IAAI,QAAAK,MAAA,CAAKY,IAAI,KAAK,IAAI,GAAG,oBAAoB,wBAAAZ,MAAA,CAAqBa,OAAO,CAACC,MAAM,CAACF,IAAI,EAAE,UAAU,CAAC,CAAE;EAAA,CAAE;EACzJG,oBAAoB,EAAE,SAAAA,qBAAAC,KAAK;IAAA,UAAAhB,MAAA,CAAOgB,KAAK;EAAA,CAAgB;EACvDC,sBAAsB,EAAE,SAAAA,uBAAAC,OAAO;IAAA,UAAAlB,MAAA,CAAOkB,OAAO;EAAA,CAAU;EACvDC,sBAAsB,EAAE,SAAAA,uBAAAC,OAAO;IAAA,UAAApB,MAAA,CAAOoB,OAAO;EAAA,CAAW;EACxD;EACAC,sBAAsB,EAAE,SAAAA,uBAACC,QAAQ,EAAEC,KAAK;IAAA,OAAKD,QAAQ,IAAIC,KAAK,CAACC,OAAO,CAACD,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,CAAC,6CAAAtB,MAAA,CAA6CuB,KAAK,CAACT,MAAM,CAACS,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,EAAE,UAAU,CAAC,IAAK,mBAAmB;EAAA;EAC/MI,sBAAsB,EAAE,SAAAA,uBAACJ,QAAQ,EAAEC,KAAK;IAAA,OAAKD,QAAQ,IAAIC,KAAK,CAACC,OAAO,CAACD,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,CAAC,uCAAAtB,MAAA,CAAiCuB,KAAK,CAACT,MAAM,CAACS,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,EAAE,UAAU,CAAC,IAAK,YAAY;EAAA;EAC5L;EACAK,cAAc,EAAE,YAAY;EAC5BC,cAAc,EAAE;AAClB,CAAC;AACD,OAAO,IAAMC,IAAI,GAAGzC,sBAAsB,CAACC,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}