import React from "react";
import { Error, Grid as ClutchGrid, Loadable, styled, useWizardContext } from "@clutch-sh/core";
const Grid = styled(ClutchGrid)({
    width: "100%",
    "> *": {
        margin: "8px 0",
    },
});
const WizardStep = ({ isLoading, error, children }) => {
    const wizardContext = useWizardContext();
    const hasError = error !== undefined && error !== null;
    const showLoading = !hasError && isLoading;
    React.useEffect(() => {
        wizardContext.setIsLoading(showLoading);
    }, [showLoading]);
    React.useEffect(() => {
        wizardContext.setHasError(hasError);
    }, [error]);
    if (showLoading) {
        return React.createElement(Loadable, { isLoading: isLoading }, children);
    }
    return (React.createElement(Grid, { container: true, justifyContent: "center", direction: "column", alignItems: "stretch" }, hasError ? React.createElement(Error, { subject: error }) : children));
};
export default WizardStep;
