/// <reference types="react" />
import type { ReactTimeagoProps as TimeAgoProps } from "react-timeago";
interface EventTimeProps extends Pick<TimeAgoProps, "date"> {
    onClick?: () => void;
    short?: boolean;
    live?: boolean;
    formatter?: (value: any, unit: any, suffix: any) => string;
}
/**
 * Will take a date/timestamp in and calculate the timeago for it
 * @param date Date is a date in the past or the future. This can be a Date Object, A UTC date-string or number of milliseconds since epoch time.
 * @param live (default) TimeAgo is live by default and will auto update it's value. However, if you don't want this behaviour, you can set live:false.
 * @param short (default) will shorten the unit string (day -> d)
 * @returns react component representing the timeago
 */
declare const TimeAgo: ({ short, onClick, formatter, ...props }: EventTimeProps) => JSX.Element;
export default TimeAgo;
